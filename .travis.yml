sudo: required

services:
  - docker

language: go

go:
  - 1.13.4

cache:
  directories:
    # cache the .build cache from the Makefile
    - $TRAVIS_BUILD_DIR/.build
    # cache the Go module cache
    - $HOME/gopath/pkg/mod

stages:
  - build and test
  - integration test
  - publish

before_install:
  - pip install --user awscli

jobs:
  include:
    #########################################################################
    # Build and test
    #########################################################################

    # Lints all the code
    - stage: build and test
      env:
        - CACHE_NAME=lint-cache
      name: lint
      script:
        - make lint
        - make generate-check
        - shellcheck script/*.sh
        - shellcheck .travis/*.sh
      os: linux 
      dist: xenial

    # Runs unit-tests and builds the binaries on linux
    - stage: build and test
      name: linux build and test
      os: linux
      dist: xenial
      script:
        - COVERALLS_TOKEN= .travis/run-unit-tests.sh
        - make artifact
        - .travis/build-release.sh
          #- aws s3 sync ./artifacts s3://scytale-artifacts/spire/build/$TRAVIS_BUILD_NUMBER/artifacts
          #- aws s3 sync ./releases s3://scytale-artifacts/spire/build/$TRAVIS_BUILD_NUMBER/releases

    # Runs unit-tests and builds the binaries on macOS
    - stage: build and test
      name: macos build and tests
      os: osx
      script:
        - COVERALLS_TOKEN= .travis/run-unit-tests.sh # skip code coverage on macOS
        - make artifact
        - .travis/build-release.sh
          #- aws s3 sync ./artifacts s3://scytale-artifacts/spire/build/$TRAVIS_BUILD_NUMBER/artifacts
          #- aws s3 sync ./releases s3://scytale-artifacts/spire/build/$TRAVIS_BUILD_NUMBER/releases

    # Builds Docker images and executes integration tests
    - stage: build and test
      name: build images
      env:
        - CACHE_NAME=build-image-cache
      os: linux
      dist: xenial
      script:
        - make images
        - docker save spire-server:latest-local spire-agent:latest-local k8s-workload-registrar:latest-local oidc-discovery-provider:latest-local | gzip > images.tar.gz
        - shasum images.tar.gz
        - aws s3 cp images.tar.gz s3://scytale-artifacts/spire/build/$TRAVIS_BUILD_NUMBER/images.tar.gz

    #########################################################################
    # Integration test
    #########################################################################

    - &integration-test
      stage: integration test
      os: linux
      dist: xenial
      before_script:
        - aws s3 cp s3://scytale-artifacts/spire/build/$TRAVIS_BUILD_NUMBER/images.tar.gz images.tar.gz
        - shasum images.tar.gz
        - zcat images.tar.gz | docker load
      name: DataStore MySQL
      script: test/integration/test-one.sh test/integration/suites/datastore-mysql

    - <<: *integration-test
      name: DataStore PostgreSQL
      script: test/integration/test-one.sh test/integration/suites/datastore-postgres

    - <<: *integration-test
      name: Envoy SDS
      script: test/integration/test-one.sh test/integration/suites/envoy-sds

    - <<: *integration-test
      name: Ghostunnel (with Federation)
      script: test/integration/test-one.sh test/integration/suites/ghostunnel-federation

    - <<: *integration-test
      name: "Join token"
      script: test/integration/test-one.sh test/integration/suites/join-token

    - <<: *integration-test
      name: "Kubernetes"
      script: test/integration/test-one.sh test/integration/suites/k8s

    - <<: *integration-test
      name: "Rotation"
      script: test/integration/test-one.sh test/integration/suites/rotation

    - <<: *integration-test
      name: "Upgrade"
      script: test/integration/test-one.sh test/integration/suites/upgrade

    #########################################################################
    # Publish
    #########################################################################

    - stage: publish
      if: type = push AND (tag IS present OR branch = master)
      env:
        - CACHE_NAME=publish-cache
      before_script:
        # Decrypt credentials needed to log into gcr registry
        - openssl aes-256-cbc -K $encrypted_b48f9e852489_key -iv $encrypted_b48f9e852489_iv -in .travis/spire-travis-ci.json.enc -out .travis/spire-travis-ci.json -d
      script:
        - aws s3 sync s3://scytale-artifacts/spire/build/$TRAVIS_BUILD_NUMBER .
        - gzip -d < images.tar.gz | docker load
        - .travis/publish-images.sh
      os: linux
      dist: xenial
      deploy:
        - provider: s3
          access_key_id: $AWS_ACCESS_KEY_ID
          secret_access_key: $AWS_SECRET_ACCESS_KEY
          bucket: scytale-artifacts
          local-dir: artifacts
          upload-dir: spire
          acl: public_read
          skip_cleanup: true
          region: us-east-2
          on:
            all_branches: true
            condition: $AWS_SECRET_ACCESS_KEY != ""
        - provider: releases
          api_key: $GITHUB_TOKEN
          file_glob: true
          file: releases/*
          skip_cleanup: true
          on:
            tags: true
            condition: $GITHUB_TOKEN != ""
      after_script:
        - aws s3 rm --recursive s3://scytale-artifacts/spire/build/$TRAVIS_BUILD_NUMBER

          #notifications:
          #  email:
          #    recipients:
          #      - spire-dev@spiffe.io
          #  slack:
          #    secure: auV9VWkA50+tf4cKUUkMH/KqggKSJCBV9ruLSF1LVgqQYnK34rp/PPzx4gTiQYA07ltnu8Hi13XMoN5+OFsRfzVRCKP1tlGuTvVhpsoyMGiNxBY1Yw2OhZXRoSjCwJkuBsAkkaxAgsC58IEnxhKq+M83dDYx+WiybO+aQnQ6ExbGE4oUBhhBkYKrHy4Kt9/3yWLqicV/VXFtvwbXG5OG1zNNOYCUEud4Y8j6pcb0kyVqlHFjAjasLPsln0QSaTxOThLZCxMZD2zpbI1xxO5tBusqDe1QOMSgsyAbDaNk7wCb2kU+0hRKcfiuWShrswhECSJsYUImLq4c77WbdhrjRgscgY2779T/jaJHbG3Lx7GlDWYLSgFcM8VfZK+K5XPcm35F2qGPiEjtYEEAPS2qQM9PZyvTEVPxjNEc2PE3bINTjibcKbfATNa1ULQvJ6ixtSL9Ao8828iUfaR0mK4eaWnJckov5OaGvah+v6vh49JqZTEN3Or8XTUw0ra14euS6jR30XB2Y3S8/0NuvHY+ytJe36yQn9FdFM3asNpBuNP7F9v00WJr3+Lhg7KHMd0m19ulwtmXiWJYU25AVMk/oXp+aq+678AvhYkYZGaUzC3timsuTlAjH9DA9yxBW+8KE9y46Jq8vXHXhKTfdKDVVUyOFxKKGAjCA5QbeKx+5QU=
