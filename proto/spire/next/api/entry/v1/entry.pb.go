// Code generated by protoc-gen-go. DO NOT EDIT.
// source: entry.proto

package entry

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	types "github.com/spiffe/spire/proto/spire/next/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListEntriesRequest struct {
	// Filters the entries returned in the response.
	Filter *ListEntriesRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// An output mask indicating the entry fields set in the response.
	OutputMask *types.EntryMask `protobuf:"bytes,2,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	// The maximum number of entries to return.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The `next_page_token` value obtained from the previous
	// `ListEntriesResponse` message, if any.
	PageToken            string   `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntriesRequest) Reset()         { *m = ListEntriesRequest{} }
func (m *ListEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*ListEntriesRequest) ProtoMessage()    {}
func (*ListEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{0}
}

func (m *ListEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntriesRequest.Unmarshal(m, b)
}
func (m *ListEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntriesRequest.Marshal(b, m, deterministic)
}
func (m *ListEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntriesRequest.Merge(m, src)
}
func (m *ListEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_ListEntriesRequest.Size(m)
}
func (m *ListEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntriesRequest proto.InternalMessageInfo

func (m *ListEntriesRequest) GetFilter() *ListEntriesRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListEntriesRequest) GetOutputMask() *types.EntryMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

func (m *ListEntriesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListEntriesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListEntriesRequest_Filter struct {
	ByParentId           string               `protobuf:"bytes,1,opt,name=by_parent_id,json=byParentId,proto3" json:"by_parent_id,omitempty"`
	BySelectors          *types.SelectorMatch `protobuf:"bytes,2,opt,name=by_selectors,json=bySelectors,proto3" json:"by_selectors,omitempty"`
	BySpiffeId           string               `protobuf:"bytes,3,opt,name=by_spiffe_id,json=bySpiffeId,proto3" json:"by_spiffe_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListEntriesRequest_Filter) Reset()         { *m = ListEntriesRequest_Filter{} }
func (m *ListEntriesRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListEntriesRequest_Filter) ProtoMessage()    {}
func (*ListEntriesRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{0, 0}
}

func (m *ListEntriesRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntriesRequest_Filter.Unmarshal(m, b)
}
func (m *ListEntriesRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntriesRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListEntriesRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntriesRequest_Filter.Merge(m, src)
}
func (m *ListEntriesRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListEntriesRequest_Filter.Size(m)
}
func (m *ListEntriesRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntriesRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntriesRequest_Filter proto.InternalMessageInfo

func (m *ListEntriesRequest_Filter) GetByParentId() string {
	if m != nil {
		return m.ByParentId
	}
	return ""
}

func (m *ListEntriesRequest_Filter) GetBySelectors() *types.SelectorMatch {
	if m != nil {
		return m.BySelectors
	}
	return nil
}

func (m *ListEntriesRequest_Filter) GetBySpiffeId() string {
	if m != nil {
		return m.BySpiffeId
	}
	return ""
}

type ListEntriesResponse struct {
	// The list of entries.
	Entries []*types.Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// The token to use as the value for `page_token` in the next
	// `ListEntriesRequest`.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntriesResponse) Reset()         { *m = ListEntriesResponse{} }
func (m *ListEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntriesResponse) ProtoMessage()    {}
func (*ListEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{1}
}

func (m *ListEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntriesResponse.Unmarshal(m, b)
}
func (m *ListEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntriesResponse.Marshal(b, m, deterministic)
}
func (m *ListEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntriesResponse.Merge(m, src)
}
func (m *ListEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntriesResponse.Size(m)
}
func (m *ListEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntriesResponse proto.InternalMessageInfo

func (m *ListEntriesResponse) GetEntries() []*types.Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *ListEntriesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetEntryRequest struct {
	// Required. ID of the entry to get.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// An output mask indicating the entry fields set in the response.
	OutputMask           *types.EntryMask `protobuf:"bytes,2,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetEntryRequest) Reset()         { *m = GetEntryRequest{} }
func (m *GetEntryRequest) String() string { return proto.CompactTextString(m) }
func (*GetEntryRequest) ProtoMessage()    {}
func (*GetEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{2}
}

func (m *GetEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEntryRequest.Unmarshal(m, b)
}
func (m *GetEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEntryRequest.Marshal(b, m, deterministic)
}
func (m *GetEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEntryRequest.Merge(m, src)
}
func (m *GetEntryRequest) XXX_Size() int {
	return xxx_messageInfo_GetEntryRequest.Size(m)
}
func (m *GetEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEntryRequest proto.InternalMessageInfo

func (m *GetEntryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetEntryRequest) GetOutputMask() *types.EntryMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

type CreateEntryRequest struct {
	// Required. The entry to be created. The entry ID field is output only,
	// and will be ignored here.
	Entry *types.Entry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	// An output mask indicating the entry fields set in the response.
	OutputMask           *types.EntryMask `protobuf:"bytes,2,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateEntryRequest) Reset()         { *m = CreateEntryRequest{} }
func (m *CreateEntryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEntryRequest) ProtoMessage()    {}
func (*CreateEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{3}
}

func (m *CreateEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEntryRequest.Unmarshal(m, b)
}
func (m *CreateEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEntryRequest.Marshal(b, m, deterministic)
}
func (m *CreateEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEntryRequest.Merge(m, src)
}
func (m *CreateEntryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEntryRequest.Size(m)
}
func (m *CreateEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEntryRequest proto.InternalMessageInfo

func (m *CreateEntryRequest) GetEntry() *types.Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *CreateEntryRequest) GetOutputMask() *types.EntryMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

type CreateEntryIfNotExistsRequest struct {
	// Required. The entry to be created. The entry ID field is output only,
	// and will be ignored here.
	Entry *types.Entry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	// An output mask indicating the entry fields set in the response.
	OutputMask           *types.EntryMask `protobuf:"bytes,2,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateEntryIfNotExistsRequest) Reset()         { *m = CreateEntryIfNotExistsRequest{} }
func (m *CreateEntryIfNotExistsRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEntryIfNotExistsRequest) ProtoMessage()    {}
func (*CreateEntryIfNotExistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{4}
}

func (m *CreateEntryIfNotExistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEntryIfNotExistsRequest.Unmarshal(m, b)
}
func (m *CreateEntryIfNotExistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEntryIfNotExistsRequest.Marshal(b, m, deterministic)
}
func (m *CreateEntryIfNotExistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEntryIfNotExistsRequest.Merge(m, src)
}
func (m *CreateEntryIfNotExistsRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEntryIfNotExistsRequest.Size(m)
}
func (m *CreateEntryIfNotExistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEntryIfNotExistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEntryIfNotExistsRequest proto.InternalMessageInfo

func (m *CreateEntryIfNotExistsRequest) GetEntry() *types.Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *CreateEntryIfNotExistsRequest) GetOutputMask() *types.EntryMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

type CreateEntryIfNotExistsResponse struct {
	// Either the preexisting or the newly created entry (see the preexisting
	// field).
	Entry *types.Entry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	// If true, entry is a preexisting entry. If false, entry is the newly
	// created entry.
	Preexisting          bool     `protobuf:"varint,2,opt,name=preexisting,proto3" json:"preexisting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEntryIfNotExistsResponse) Reset()         { *m = CreateEntryIfNotExistsResponse{} }
func (m *CreateEntryIfNotExistsResponse) String() string { return proto.CompactTextString(m) }
func (*CreateEntryIfNotExistsResponse) ProtoMessage()    {}
func (*CreateEntryIfNotExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{5}
}

func (m *CreateEntryIfNotExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEntryIfNotExistsResponse.Unmarshal(m, b)
}
func (m *CreateEntryIfNotExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEntryIfNotExistsResponse.Marshal(b, m, deterministic)
}
func (m *CreateEntryIfNotExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEntryIfNotExistsResponse.Merge(m, src)
}
func (m *CreateEntryIfNotExistsResponse) XXX_Size() int {
	return xxx_messageInfo_CreateEntryIfNotExistsResponse.Size(m)
}
func (m *CreateEntryIfNotExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEntryIfNotExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEntryIfNotExistsResponse proto.InternalMessageInfo

func (m *CreateEntryIfNotExistsResponse) GetEntry() *types.Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *CreateEntryIfNotExistsResponse) GetPreexisting() bool {
	if m != nil {
		return m.Preexisting
	}
	return false
}

type BatchCreateEntryRequest struct {
	// The entries to be created. The entry ID field is output only, and will
	// be ignored here.
	Entries []*types.Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// An output mask indicating the entry fields set in the response.
	OutputMask           *types.EntryMask `protobuf:"bytes,2,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BatchCreateEntryRequest) Reset()         { *m = BatchCreateEntryRequest{} }
func (m *BatchCreateEntryRequest) String() string { return proto.CompactTextString(m) }
func (*BatchCreateEntryRequest) ProtoMessage()    {}
func (*BatchCreateEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{6}
}

func (m *BatchCreateEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchCreateEntryRequest.Unmarshal(m, b)
}
func (m *BatchCreateEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchCreateEntryRequest.Marshal(b, m, deterministic)
}
func (m *BatchCreateEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchCreateEntryRequest.Merge(m, src)
}
func (m *BatchCreateEntryRequest) XXX_Size() int {
	return xxx_messageInfo_BatchCreateEntryRequest.Size(m)
}
func (m *BatchCreateEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchCreateEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchCreateEntryRequest proto.InternalMessageInfo

func (m *BatchCreateEntryRequest) GetEntries() []*types.Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *BatchCreateEntryRequest) GetOutputMask() *types.EntryMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

type BatchCreateEntryResponse struct {
	// Result for each entry in the request.
	Results              []*BatchCreateEntryResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *BatchCreateEntryResponse) Reset()         { *m = BatchCreateEntryResponse{} }
func (m *BatchCreateEntryResponse) String() string { return proto.CompactTextString(m) }
func (*BatchCreateEntryResponse) ProtoMessage()    {}
func (*BatchCreateEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{7}
}

func (m *BatchCreateEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchCreateEntryResponse.Unmarshal(m, b)
}
func (m *BatchCreateEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchCreateEntryResponse.Marshal(b, m, deterministic)
}
func (m *BatchCreateEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchCreateEntryResponse.Merge(m, src)
}
func (m *BatchCreateEntryResponse) XXX_Size() int {
	return xxx_messageInfo_BatchCreateEntryResponse.Size(m)
}
func (m *BatchCreateEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchCreateEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchCreateEntryResponse proto.InternalMessageInfo

func (m *BatchCreateEntryResponse) GetResults() []*BatchCreateEntryResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type BatchCreateEntryResponse_Result struct {
	// The status of creating the entry.
	Status *types.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The entry that was created. If the status is OK, it will be the
	// entry that was created. If it the status is ALREADY_EXISTS, it will
	// be the similar entry that already exists. See CreateEntryIfNotExists
	// for details on what constitutes a similar entry. If the status is
	// any other value, this field will not be set.
	Entry                *types.Entry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BatchCreateEntryResponse_Result) Reset()         { *m = BatchCreateEntryResponse_Result{} }
func (m *BatchCreateEntryResponse_Result) String() string { return proto.CompactTextString(m) }
func (*BatchCreateEntryResponse_Result) ProtoMessage()    {}
func (*BatchCreateEntryResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{7, 0}
}

func (m *BatchCreateEntryResponse_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchCreateEntryResponse_Result.Unmarshal(m, b)
}
func (m *BatchCreateEntryResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchCreateEntryResponse_Result.Marshal(b, m, deterministic)
}
func (m *BatchCreateEntryResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchCreateEntryResponse_Result.Merge(m, src)
}
func (m *BatchCreateEntryResponse_Result) XXX_Size() int {
	return xxx_messageInfo_BatchCreateEntryResponse_Result.Size(m)
}
func (m *BatchCreateEntryResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchCreateEntryResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_BatchCreateEntryResponse_Result proto.InternalMessageInfo

func (m *BatchCreateEntryResponse_Result) GetStatus() *types.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BatchCreateEntryResponse_Result) GetEntry() *types.Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type UpdateEntryRequest struct {
	// Required. The updated entry.
	Entry *types.Entry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	// An input mask indicating what entry fields should be updated.
	InputMask *types.EntryMask `protobuf:"bytes,2,opt,name=input_mask,json=inputMask,proto3" json:"input_mask,omitempty"`
	// An output mask indicating what entry fields are set in the response.
	OutputMask           *types.EntryMask `protobuf:"bytes,3,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateEntryRequest) Reset()         { *m = UpdateEntryRequest{} }
func (m *UpdateEntryRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEntryRequest) ProtoMessage()    {}
func (*UpdateEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{8}
}

func (m *UpdateEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEntryRequest.Unmarshal(m, b)
}
func (m *UpdateEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEntryRequest.Marshal(b, m, deterministic)
}
func (m *UpdateEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEntryRequest.Merge(m, src)
}
func (m *UpdateEntryRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEntryRequest.Size(m)
}
func (m *UpdateEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEntryRequest proto.InternalMessageInfo

func (m *UpdateEntryRequest) GetEntry() *types.Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *UpdateEntryRequest) GetInputMask() *types.EntryMask {
	if m != nil {
		return m.InputMask
	}
	return nil
}

func (m *UpdateEntryRequest) GetOutputMask() *types.EntryMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

type BatchUpdateEntryRequest struct {
	// The entries to be updated.
	Entries []*types.Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// An input mask indicating what entry fields should be updated.
	InputMask *types.EntryMask `protobuf:"bytes,2,opt,name=input_mask,json=inputMask,proto3" json:"input_mask,omitempty"`
	// An output mask indicating what entry fields are set in the response.
	OutputMask           *types.EntryMask `protobuf:"bytes,3,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BatchUpdateEntryRequest) Reset()         { *m = BatchUpdateEntryRequest{} }
func (m *BatchUpdateEntryRequest) String() string { return proto.CompactTextString(m) }
func (*BatchUpdateEntryRequest) ProtoMessage()    {}
func (*BatchUpdateEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{9}
}

func (m *BatchUpdateEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpdateEntryRequest.Unmarshal(m, b)
}
func (m *BatchUpdateEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpdateEntryRequest.Marshal(b, m, deterministic)
}
func (m *BatchUpdateEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpdateEntryRequest.Merge(m, src)
}
func (m *BatchUpdateEntryRequest) XXX_Size() int {
	return xxx_messageInfo_BatchUpdateEntryRequest.Size(m)
}
func (m *BatchUpdateEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpdateEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpdateEntryRequest proto.InternalMessageInfo

func (m *BatchUpdateEntryRequest) GetEntries() []*types.Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *BatchUpdateEntryRequest) GetInputMask() *types.EntryMask {
	if m != nil {
		return m.InputMask
	}
	return nil
}

func (m *BatchUpdateEntryRequest) GetOutputMask() *types.EntryMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

type BatchUpdateEntryResponse struct {
	// Result for each entry in the request.
	Results              []*BatchUpdateEntryResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *BatchUpdateEntryResponse) Reset()         { *m = BatchUpdateEntryResponse{} }
func (m *BatchUpdateEntryResponse) String() string { return proto.CompactTextString(m) }
func (*BatchUpdateEntryResponse) ProtoMessage()    {}
func (*BatchUpdateEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{10}
}

func (m *BatchUpdateEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpdateEntryResponse.Unmarshal(m, b)
}
func (m *BatchUpdateEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpdateEntryResponse.Marshal(b, m, deterministic)
}
func (m *BatchUpdateEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpdateEntryResponse.Merge(m, src)
}
func (m *BatchUpdateEntryResponse) XXX_Size() int {
	return xxx_messageInfo_BatchUpdateEntryResponse.Size(m)
}
func (m *BatchUpdateEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpdateEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpdateEntryResponse proto.InternalMessageInfo

func (m *BatchUpdateEntryResponse) GetResults() []*BatchUpdateEntryResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type BatchUpdateEntryResponse_Result struct {
	// The status of creating the entry.
	Status *types.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The entry that was updated. If the status is OK, it will be the
	// entry that was updated. If the status is any other value, this field
	// will not be set.
	Entry                *types.Entry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BatchUpdateEntryResponse_Result) Reset()         { *m = BatchUpdateEntryResponse_Result{} }
func (m *BatchUpdateEntryResponse_Result) String() string { return proto.CompactTextString(m) }
func (*BatchUpdateEntryResponse_Result) ProtoMessage()    {}
func (*BatchUpdateEntryResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{10, 0}
}

func (m *BatchUpdateEntryResponse_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpdateEntryResponse_Result.Unmarshal(m, b)
}
func (m *BatchUpdateEntryResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpdateEntryResponse_Result.Marshal(b, m, deterministic)
}
func (m *BatchUpdateEntryResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpdateEntryResponse_Result.Merge(m, src)
}
func (m *BatchUpdateEntryResponse_Result) XXX_Size() int {
	return xxx_messageInfo_BatchUpdateEntryResponse_Result.Size(m)
}
func (m *BatchUpdateEntryResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpdateEntryResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpdateEntryResponse_Result proto.InternalMessageInfo

func (m *BatchUpdateEntryResponse_Result) GetStatus() *types.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BatchUpdateEntryResponse_Result) GetEntry() *types.Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type DeleteEntryRequest struct {
	// Required. ID of the entry to delete.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEntryRequest) Reset()         { *m = DeleteEntryRequest{} }
func (m *DeleteEntryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEntryRequest) ProtoMessage()    {}
func (*DeleteEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{11}
}

func (m *DeleteEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEntryRequest.Unmarshal(m, b)
}
func (m *DeleteEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEntryRequest.Marshal(b, m, deterministic)
}
func (m *DeleteEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEntryRequest.Merge(m, src)
}
func (m *DeleteEntryRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEntryRequest.Size(m)
}
func (m *DeleteEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEntryRequest proto.InternalMessageInfo

func (m *DeleteEntryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BatchDeleteEntryRequest struct {
	// IDs of the entries to delete.
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchDeleteEntryRequest) Reset()         { *m = BatchDeleteEntryRequest{} }
func (m *BatchDeleteEntryRequest) String() string { return proto.CompactTextString(m) }
func (*BatchDeleteEntryRequest) ProtoMessage()    {}
func (*BatchDeleteEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{12}
}

func (m *BatchDeleteEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDeleteEntryRequest.Unmarshal(m, b)
}
func (m *BatchDeleteEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDeleteEntryRequest.Marshal(b, m, deterministic)
}
func (m *BatchDeleteEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDeleteEntryRequest.Merge(m, src)
}
func (m *BatchDeleteEntryRequest) XXX_Size() int {
	return xxx_messageInfo_BatchDeleteEntryRequest.Size(m)
}
func (m *BatchDeleteEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDeleteEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDeleteEntryRequest proto.InternalMessageInfo

func (m *BatchDeleteEntryRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type BatchDeleteEntryResponse struct {
	// Result for each entry in the request.
	Results              []*BatchDeleteEntryResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *BatchDeleteEntryResponse) Reset()         { *m = BatchDeleteEntryResponse{} }
func (m *BatchDeleteEntryResponse) String() string { return proto.CompactTextString(m) }
func (*BatchDeleteEntryResponse) ProtoMessage()    {}
func (*BatchDeleteEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{13}
}

func (m *BatchDeleteEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDeleteEntryResponse.Unmarshal(m, b)
}
func (m *BatchDeleteEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDeleteEntryResponse.Marshal(b, m, deterministic)
}
func (m *BatchDeleteEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDeleteEntryResponse.Merge(m, src)
}
func (m *BatchDeleteEntryResponse) XXX_Size() int {
	return xxx_messageInfo_BatchDeleteEntryResponse.Size(m)
}
func (m *BatchDeleteEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDeleteEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDeleteEntryResponse proto.InternalMessageInfo

func (m *BatchDeleteEntryResponse) GetResults() []*BatchDeleteEntryResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type BatchDeleteEntryResponse_Result struct {
	// The status of creating the entry.
	Status *types.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The ID of the entry that was deleted.
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchDeleteEntryResponse_Result) Reset()         { *m = BatchDeleteEntryResponse_Result{} }
func (m *BatchDeleteEntryResponse_Result) String() string { return proto.CompactTextString(m) }
func (*BatchDeleteEntryResponse_Result) ProtoMessage()    {}
func (*BatchDeleteEntryResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{13, 0}
}

func (m *BatchDeleteEntryResponse_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDeleteEntryResponse_Result.Unmarshal(m, b)
}
func (m *BatchDeleteEntryResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDeleteEntryResponse_Result.Marshal(b, m, deterministic)
}
func (m *BatchDeleteEntryResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDeleteEntryResponse_Result.Merge(m, src)
}
func (m *BatchDeleteEntryResponse_Result) XXX_Size() int {
	return xxx_messageInfo_BatchDeleteEntryResponse_Result.Size(m)
}
func (m *BatchDeleteEntryResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDeleteEntryResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDeleteEntryResponse_Result proto.InternalMessageInfo

func (m *BatchDeleteEntryResponse_Result) GetStatus() *types.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BatchDeleteEntryResponse_Result) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetAuthorizedEntriesRequest struct {
	// An output mask indicating which fields are set in the response.
	OutputMask           *types.EntryMask `protobuf:"bytes,1,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetAuthorizedEntriesRequest) Reset()         { *m = GetAuthorizedEntriesRequest{} }
func (m *GetAuthorizedEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuthorizedEntriesRequest) ProtoMessage()    {}
func (*GetAuthorizedEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{14}
}

func (m *GetAuthorizedEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorizedEntriesRequest.Unmarshal(m, b)
}
func (m *GetAuthorizedEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorizedEntriesRequest.Marshal(b, m, deterministic)
}
func (m *GetAuthorizedEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizedEntriesRequest.Merge(m, src)
}
func (m *GetAuthorizedEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuthorizedEntriesRequest.Size(m)
}
func (m *GetAuthorizedEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizedEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizedEntriesRequest proto.InternalMessageInfo

func (m *GetAuthorizedEntriesRequest) GetOutputMask() *types.EntryMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

type GetAuthorizedEntriesResponse struct {
	// The authorized entries.
	Entries              []*types.Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAuthorizedEntriesResponse) Reset()         { *m = GetAuthorizedEntriesResponse{} }
func (m *GetAuthorizedEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*GetAuthorizedEntriesResponse) ProtoMessage()    {}
func (*GetAuthorizedEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{15}
}

func (m *GetAuthorizedEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorizedEntriesResponse.Unmarshal(m, b)
}
func (m *GetAuthorizedEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorizedEntriesResponse.Marshal(b, m, deterministic)
}
func (m *GetAuthorizedEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizedEntriesResponse.Merge(m, src)
}
func (m *GetAuthorizedEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_GetAuthorizedEntriesResponse.Size(m)
}
func (m *GetAuthorizedEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizedEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizedEntriesResponse proto.InternalMessageInfo

func (m *GetAuthorizedEntriesResponse) GetEntries() []*types.Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*ListEntriesRequest)(nil), "spire.api.entry.v1.ListEntriesRequest")
	proto.RegisterType((*ListEntriesRequest_Filter)(nil), "spire.api.entry.v1.ListEntriesRequest.Filter")
	proto.RegisterType((*ListEntriesResponse)(nil), "spire.api.entry.v1.ListEntriesResponse")
	proto.RegisterType((*GetEntryRequest)(nil), "spire.api.entry.v1.GetEntryRequest")
	proto.RegisterType((*CreateEntryRequest)(nil), "spire.api.entry.v1.CreateEntryRequest")
	proto.RegisterType((*CreateEntryIfNotExistsRequest)(nil), "spire.api.entry.v1.CreateEntryIfNotExistsRequest")
	proto.RegisterType((*CreateEntryIfNotExistsResponse)(nil), "spire.api.entry.v1.CreateEntryIfNotExistsResponse")
	proto.RegisterType((*BatchCreateEntryRequest)(nil), "spire.api.entry.v1.BatchCreateEntryRequest")
	proto.RegisterType((*BatchCreateEntryResponse)(nil), "spire.api.entry.v1.BatchCreateEntryResponse")
	proto.RegisterType((*BatchCreateEntryResponse_Result)(nil), "spire.api.entry.v1.BatchCreateEntryResponse.Result")
	proto.RegisterType((*UpdateEntryRequest)(nil), "spire.api.entry.v1.UpdateEntryRequest")
	proto.RegisterType((*BatchUpdateEntryRequest)(nil), "spire.api.entry.v1.BatchUpdateEntryRequest")
	proto.RegisterType((*BatchUpdateEntryResponse)(nil), "spire.api.entry.v1.BatchUpdateEntryResponse")
	proto.RegisterType((*BatchUpdateEntryResponse_Result)(nil), "spire.api.entry.v1.BatchUpdateEntryResponse.Result")
	proto.RegisterType((*DeleteEntryRequest)(nil), "spire.api.entry.v1.DeleteEntryRequest")
	proto.RegisterType((*BatchDeleteEntryRequest)(nil), "spire.api.entry.v1.BatchDeleteEntryRequest")
	proto.RegisterType((*BatchDeleteEntryResponse)(nil), "spire.api.entry.v1.BatchDeleteEntryResponse")
	proto.RegisterType((*BatchDeleteEntryResponse_Result)(nil), "spire.api.entry.v1.BatchDeleteEntryResponse.Result")
	proto.RegisterType((*GetAuthorizedEntriesRequest)(nil), "spire.api.entry.v1.GetAuthorizedEntriesRequest")
	proto.RegisterType((*GetAuthorizedEntriesResponse)(nil), "spire.api.entry.v1.GetAuthorizedEntriesResponse")
}

func init() { proto.RegisterFile("entry.proto", fileDescriptor_daa6c5b6c627940f) }

var fileDescriptor_daa6c5b6c627940f = []byte{
	// 867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x4f, 0x4f, 0xe3, 0x46,
	0x14, 0x97, 0x93, 0x12, 0xc8, 0x73, 0x5b, 0xd0, 0x50, 0xd1, 0xc8, 0x40, 0x1b, 0xb9, 0x15, 0x8d,
	0x14, 0x6a, 0x97, 0xa0, 0xaa, 0x07, 0xc4, 0xa1, 0xd0, 0x14, 0x45, 0x82, 0x0a, 0x99, 0xb6, 0x07,
	0x0e, 0x8d, 0x1c, 0x32, 0x09, 0xa3, 0x24, 0xb6, 0xeb, 0x19, 0x53, 0xc2, 0xa5, 0x55, 0xaf, 0xfb,
	0x5d, 0x56, 0x7b, 0xdb, 0xef, 0xb0, 0x1f, 0x61, 0x0f, 0xfb, 0x59, 0x56, 0x9e, 0x19, 0x67, 0x9d,
	0x78, 0xb2, 0x71, 0x72, 0xe0, 0x66, 0xbd, 0x79, 0x7f, 0x7e, 0xef, 0x37, 0x6f, 0x7e, 0xe3, 0x01,
	0x1d, 0x7b, 0x2c, 0x1c, 0x5b, 0x41, 0xe8, 0x33, 0x1f, 0x21, 0x1a, 0x90, 0x10, 0x5b, 0x6e, 0x40,
	0x2c, 0x61, 0x7e, 0x38, 0x32, 0x76, 0xfb, 0xbe, 0xdf, 0x1f, 0x62, 0x9b, 0x7b, 0x74, 0xa2, 0x9e,
	0x8d, 0x47, 0x01, 0x93, 0x01, 0xc6, 0x1e, 0x0f, 0xb0, 0x3d, 0xfc, 0xc8, 0x6c, 0x36, 0x0e, 0x30,
	0xb5, 0x53, 0xe9, 0x8c, 0xaf, 0x33, 0xab, 0x14, 0x0f, 0xf1, 0x1d, 0xf3, 0x43, 0xe9, 0xb0, 0x9f,
	0x75, 0x60, 0x2e, 0x8b, 0xa8, 0x58, 0x36, 0xdf, 0x15, 0x00, 0x5d, 0x12, 0xca, 0x9a, 0x1e, 0x0b,
	0x09, 0xa6, 0x0e, 0xfe, 0x3b, 0xc2, 0x94, 0xa1, 0x26, 0x94, 0x7a, 0x64, 0xc8, 0x70, 0x58, 0xd1,
	0xaa, 0x5a, 0x4d, 0x6f, 0x7c, 0x6f, 0x65, 0x61, 0x5b, 0xd9, 0x38, 0xeb, 0x57, 0x1e, 0xe4, 0xc8,
	0x60, 0xf4, 0x13, 0xe8, 0x7e, 0xc4, 0x82, 0x88, 0xb5, 0x47, 0x2e, 0x1d, 0x54, 0x0a, 0x3c, 0xd7,
	0x8e, 0xcc, 0xc5, 0xd1, 0x58, 0x71, 0x82, 0xf1, 0x95, 0x4b, 0x07, 0x0e, 0x08, 0xd7, 0xf8, 0x1b,
	0xed, 0x42, 0x39, 0x70, 0xfb, 0xb8, 0x4d, 0xc9, 0x13, 0xae, 0x14, 0xab, 0x5a, 0x6d, 0xcd, 0xd9,
	0x88, 0x0d, 0x37, 0xe4, 0x09, 0xa3, 0x7d, 0x00, 0xbe, 0xc8, 0xfc, 0x01, 0xf6, 0x2a, 0x9f, 0x54,
	0xb5, 0x5a, 0xd9, 0xe1, 0xee, 0xbf, 0xc7, 0x06, 0xe3, 0x85, 0x06, 0x25, 0x81, 0x03, 0x55, 0xe1,
	0xd3, 0xce, 0xb8, 0x1d, 0xb8, 0x21, 0xf6, 0x58, 0x9b, 0x74, 0x79, 0x33, 0x65, 0x07, 0x3a, 0xe3,
	0x6b, 0x6e, 0x6a, 0x75, 0xd1, 0x29, 0xf7, 0x48, 0x38, 0xa3, 0x12, 0xa2, 0x31, 0x05, 0xf1, 0x46,
	0xae, 0x5e, 0xb9, 0xec, 0xee, 0xde, 0xd1, 0x3b, 0xe3, 0xc4, 0x40, 0x65, 0x01, 0x1a, 0x90, 0x5e,
	0x0f, 0xc7, 0x05, 0x8a, 0x49, 0x81, 0x1b, 0x6e, 0x6a, 0x75, 0xcd, 0x01, 0x6c, 0x4f, 0xf1, 0x44,
	0x03, 0xdf, 0xa3, 0x18, 0x1d, 0xc2, 0x3a, 0x16, 0xa6, 0x8a, 0x56, 0x2d, 0xd6, 0xf4, 0x06, 0xca,
	0xb2, 0xe2, 0x24, 0x2e, 0xe8, 0x00, 0x36, 0xe3, 0x0d, 0x6c, 0xa7, 0xda, 0x2e, 0xf0, 0x4a, 0x9f,
	0xc5, 0xe6, 0xeb, 0xa4, 0x75, 0xf3, 0x16, 0x36, 0x2f, 0x30, 0x13, 0xc1, 0x72, 0x27, 0x3f, 0x87,
	0xc2, 0xa4, 0xf1, 0x02, 0xe9, 0xae, 0xbc, 0x25, 0xe6, 0x3f, 0x80, 0xce, 0x43, 0xec, 0x32, 0x3c,
	0x95, 0xbe, 0x06, 0x6b, 0x7c, 0x1e, 0xe4, 0x9c, 0xa8, 0xba, 0x10, 0x0e, 0xab, 0x17, 0xfe, 0x5f,
	0x83, 0xfd, 0x54, 0xe5, 0x56, 0xef, 0x37, 0x9f, 0x35, 0x1f, 0x09, 0x65, 0xf4, 0x19, 0x41, 0x0c,
	0xe1, 0xab, 0x79, 0x18, 0xe4, 0x8e, 0xe6, 0x07, 0x51, 0x05, 0x3d, 0x08, 0x31, 0x8e, 0xc3, 0x89,
	0xd7, 0xe7, 0x20, 0x36, 0x9c, 0xb4, 0xc9, 0xfc, 0x4f, 0x83, 0x2f, 0xcf, 0xe2, 0x69, 0x53, 0x30,
	0xbe, 0xdc, 0xe4, 0xac, 0xdc, 0xf0, 0x1b, 0x0d, 0x2a, 0x59, 0x08, 0xb2, 0xd7, 0x2b, 0x58, 0x0f,
	0x31, 0x8d, 0x86, 0x2c, 0xc1, 0x70, 0xac, 0xd2, 0x87, 0x79, 0xe1, 0x96, 0xc3, 0x63, 0x9d, 0x24,
	0x87, 0xd1, 0x86, 0x92, 0x30, 0xa1, 0x3a, 0x94, 0x84, 0x3c, 0x49, 0x16, 0xb7, 0xa7, 0x0f, 0x22,
	0x5f, 0x72, 0xa4, 0xcb, 0x07, 0xc6, 0x0b, 0x0b, 0x18, 0x37, 0x5f, 0x6a, 0x80, 0xfe, 0x08, 0xba,
	0xab, 0x0f, 0xef, 0x8f, 0x00, 0xc4, 0xcb, 0xc9, 0x62, 0x99, 0x7b, 0x72, 0x19, 0x9b, 0x61, 0xbf,
	0x98, 0x9b, 0xfd, 0xd7, 0xc9, 0x00, 0x28, 0x50, 0x2f, 0x37, 0x00, 0xcf, 0x8d, 0x7c, 0x32, 0x37,
	0x53, 0xc8, 0x97, 0x9f, 0x1b, 0x45, 0xf8, 0xf3, 0xcf, 0xcd, 0xb7, 0x80, 0x7e, 0xc1, 0x43, 0x3c,
	0xb3, 0x01, 0x33, 0x92, 0x6a, 0xd6, 0xe5, 0x5e, 0x29, 0x5c, 0xb7, 0xa0, 0x48, 0xba, 0xa2, 0xd9,
	0xb2, 0x13, 0x7f, 0x9a, 0xaf, 0x12, 0x7e, 0xa6, 0xbc, 0x97, 0xe7, 0x47, 0x11, 0x9e, 0xe1, 0xa7,
	0xb9, 0x1a, 0x3f, 0xa2, 0xbf, 0xc2, 0xa4, 0xbf, 0x3f, 0x61, 0xf7, 0x02, 0xb3, 0x9f, 0x23, 0x76,
	0xef, 0x87, 0xe4, 0x09, 0x77, 0x67, 0xfe, 0x15, 0x66, 0x46, 0x45, 0xcb, 0x3d, 0x2a, 0x97, 0xb0,
	0xa7, 0xce, 0xbb, 0xca, 0x1d, 0xd9, 0x78, 0xbb, 0x0e, 0x6b, 0xdc, 0x84, 0xfe, 0x02, 0x3d, 0x75,
	0xe5, 0xa2, 0x83, 0x7c, 0xff, 0x2e, 0xc6, 0x77, 0x0b, 0xfd, 0x24, 0xae, 0x73, 0xd8, 0x48, 0x6e,
	0x59, 0xf4, 0x8d, 0x2a, 0x68, 0xe6, 0x0e, 0x36, 0x14, 0xb8, 0x51, 0x0b, 0xf4, 0x94, 0x34, 0xaa,
	0x41, 0x66, 0xd5, 0x5f, 0x99, 0x6a, 0x04, 0x5b, 0xb3, 0x52, 0x8b, 0xea, 0xf9, 0x04, 0x59, 0x24,
	0x3d, 0x5c, 0x46, 0xbd, 0xd1, 0xbf, 0xb0, 0xa3, 0xbe, 0x0a, 0xd1, 0xd1, 0x82, 0x26, 0xb2, 0x57,
	0xb7, 0xd1, 0x58, 0x26, 0x44, 0x02, 0x68, 0x81, 0x9e, 0x52, 0x07, 0x35, 0x75, 0x59, 0xdd, 0xfc,
	0x28, 0x75, 0xe9, 0x7c, 0xf5, 0x7c, 0x9a, 0xb4, 0x88, 0x3a, 0xb5, 0xfe, 0xe9, 0xa9, 0x73, 0xab,
	0x46, 0x9e, 0x55, 0x11, 0x63, 0xc7, 0x12, 0x0f, 0x04, 0x2b, 0x79, 0x20, 0x58, 0xcd, 0xf8, 0x81,
	0x30, 0x41, 0x9f, 0xce, 0x59, 0xcf, 0xa7, 0x18, 0x8b, 0xd0, 0xab, 0xd4, 0x69, 0x0c, 0x5f, 0xa8,
	0xce, 0x2b, 0xb2, 0xe7, 0x9c, 0x81, 0x79, 0x8a, 0x61, 0xfc, 0x90, 0x3f, 0x40, 0x94, 0x3e, 0x3b,
	0xbd, 0x3d, 0xe9, 0x13, 0x76, 0x1f, 0x75, 0xac, 0x3b, 0x7f, 0x64, 0x8b, 0xff, 0x6d, 0x5b, 0xbc,
	0x6c, 0x38, 0x27, 0x76, 0xea, 0x95, 0xe3, 0x06, 0x44, 0x3c, 0x91, 0xec, 0x87, 0xa3, 0x13, 0xfe,
	0xd1, 0x29, 0x71, 0xa7, 0xe3, 0xf7, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xad, 0xda, 0xd1, 0x8a,
	0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EntryClient is the client API for Entry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EntryClient interface {
	// Lists entries.
	//
	// The caller must be local or present an admin X509-SVID.
	ListEntries(ctx context.Context, in *ListEntriesRequest, opts ...grpc.CallOption) (*ListEntriesResponse, error)
	// Gets an entry. If the entry does not exist, NOT_FOUND is returned.
	//
	// The caller must be local or present an admin X509-SVID.
	GetEntry(ctx context.Context, in *GetEntryRequest, opts ...grpc.CallOption) (*types.Entry, error)
	// Creates an entry. If a similar already exists, ALREADY_EXISTS is
	// returned.  An entry is similar if it has the same spiffe_id, parent_id,
	// and selectors.
	//
	// The caller must be local or present an admin X509-SVID.
	CreateEntry(ctx context.Context, in *CreateEntryRequest, opts ...grpc.CallOption) (*types.Entry, error)
	// Batch creates one or more entries.
	//
	// The caller must be local or present an admin X509-SVID.
	BatchCreateEntry(ctx context.Context, in *BatchCreateEntryRequest, opts ...grpc.CallOption) (*BatchCreateEntryResponse, error)
	// Creates an entry if a similar entry does not already exist. An entry is
	// similar if it has the same spiffe_id, parent_id, and selectors.
	//
	// The caller must be local or present an admin X509-SVID.
	CreateEntryIfNotExists(ctx context.Context, in *CreateEntryIfNotExistsRequest, opts ...grpc.CallOption) (*CreateEntryIfNotExistsResponse, error)
	// Updates an entry. If the entry does not exist, NOT_FOUND is returned.
	//
	// The caller must be local or present an admin X509-SVID.
	UpdateEntry(ctx context.Context, in *UpdateEntryRequest, opts ...grpc.CallOption) (*types.Entry, error)
	// Batch updates one or more entries.
	//
	// The caller must be local or present an admin X509-SVID.
	BatchUpdateEntry(ctx context.Context, in *BatchUpdateEntryRequest, opts ...grpc.CallOption) (*BatchUpdateEntryResponse, error)
	// Deletes an entry. If the entry does not exist, NOT_FOUND is returned.
	//
	// The caller must be local or present an admin X509-SVID.
	DeleteEntry(ctx context.Context, in *DeleteEntryRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Batch deletes one or more entries.
	//
	// The caller must be local or present an admin X509-SVID.
	BatchDeleteEntry(ctx context.Context, in *BatchDeleteEntryRequest, opts ...grpc.CallOption) (*BatchDeleteEntryResponse, error)
	// Gets the entries the caller is authorized for.
	//
	// The caller must present an active agent X509-SVID. See the Agent
	// AttestAgent/RenewAgent RPCs.
	GetAuthorizedEntries(ctx context.Context, in *GetAuthorizedEntriesRequest, opts ...grpc.CallOption) (*GetAuthorizedEntriesResponse, error)
}

type entryClient struct {
	cc *grpc.ClientConn
}

func NewEntryClient(cc *grpc.ClientConn) EntryClient {
	return &entryClient{cc}
}

func (c *entryClient) ListEntries(ctx context.Context, in *ListEntriesRequest, opts ...grpc.CallOption) (*ListEntriesResponse, error) {
	out := new(ListEntriesResponse)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/ListEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) GetEntry(ctx context.Context, in *GetEntryRequest, opts ...grpc.CallOption) (*types.Entry, error) {
	out := new(types.Entry)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/GetEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) CreateEntry(ctx context.Context, in *CreateEntryRequest, opts ...grpc.CallOption) (*types.Entry, error) {
	out := new(types.Entry)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/CreateEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) BatchCreateEntry(ctx context.Context, in *BatchCreateEntryRequest, opts ...grpc.CallOption) (*BatchCreateEntryResponse, error) {
	out := new(BatchCreateEntryResponse)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/BatchCreateEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) CreateEntryIfNotExists(ctx context.Context, in *CreateEntryIfNotExistsRequest, opts ...grpc.CallOption) (*CreateEntryIfNotExistsResponse, error) {
	out := new(CreateEntryIfNotExistsResponse)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/CreateEntryIfNotExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) UpdateEntry(ctx context.Context, in *UpdateEntryRequest, opts ...grpc.CallOption) (*types.Entry, error) {
	out := new(types.Entry)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/UpdateEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) BatchUpdateEntry(ctx context.Context, in *BatchUpdateEntryRequest, opts ...grpc.CallOption) (*BatchUpdateEntryResponse, error) {
	out := new(BatchUpdateEntryResponse)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/BatchUpdateEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) DeleteEntry(ctx context.Context, in *DeleteEntryRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/DeleteEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) BatchDeleteEntry(ctx context.Context, in *BatchDeleteEntryRequest, opts ...grpc.CallOption) (*BatchDeleteEntryResponse, error) {
	out := new(BatchDeleteEntryResponse)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/BatchDeleteEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) GetAuthorizedEntries(ctx context.Context, in *GetAuthorizedEntriesRequest, opts ...grpc.CallOption) (*GetAuthorizedEntriesResponse, error) {
	out := new(GetAuthorizedEntriesResponse)
	err := c.cc.Invoke(ctx, "/spire.api.entry.v1.Entry/GetAuthorizedEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EntryServer is the server API for Entry service.
type EntryServer interface {
	// Lists entries.
	//
	// The caller must be local or present an admin X509-SVID.
	ListEntries(context.Context, *ListEntriesRequest) (*ListEntriesResponse, error)
	// Gets an entry. If the entry does not exist, NOT_FOUND is returned.
	//
	// The caller must be local or present an admin X509-SVID.
	GetEntry(context.Context, *GetEntryRequest) (*types.Entry, error)
	// Creates an entry. If a similar already exists, ALREADY_EXISTS is
	// returned.  An entry is similar if it has the same spiffe_id, parent_id,
	// and selectors.
	//
	// The caller must be local or present an admin X509-SVID.
	CreateEntry(context.Context, *CreateEntryRequest) (*types.Entry, error)
	// Batch creates one or more entries.
	//
	// The caller must be local or present an admin X509-SVID.
	BatchCreateEntry(context.Context, *BatchCreateEntryRequest) (*BatchCreateEntryResponse, error)
	// Creates an entry if a similar entry does not already exist. An entry is
	// similar if it has the same spiffe_id, parent_id, and selectors.
	//
	// The caller must be local or present an admin X509-SVID.
	CreateEntryIfNotExists(context.Context, *CreateEntryIfNotExistsRequest) (*CreateEntryIfNotExistsResponse, error)
	// Updates an entry. If the entry does not exist, NOT_FOUND is returned.
	//
	// The caller must be local or present an admin X509-SVID.
	UpdateEntry(context.Context, *UpdateEntryRequest) (*types.Entry, error)
	// Batch updates one or more entries.
	//
	// The caller must be local or present an admin X509-SVID.
	BatchUpdateEntry(context.Context, *BatchUpdateEntryRequest) (*BatchUpdateEntryResponse, error)
	// Deletes an entry. If the entry does not exist, NOT_FOUND is returned.
	//
	// The caller must be local or present an admin X509-SVID.
	DeleteEntry(context.Context, *DeleteEntryRequest) (*empty.Empty, error)
	// Batch deletes one or more entries.
	//
	// The caller must be local or present an admin X509-SVID.
	BatchDeleteEntry(context.Context, *BatchDeleteEntryRequest) (*BatchDeleteEntryResponse, error)
	// Gets the entries the caller is authorized for.
	//
	// The caller must present an active agent X509-SVID. See the Agent
	// AttestAgent/RenewAgent RPCs.
	GetAuthorizedEntries(context.Context, *GetAuthorizedEntriesRequest) (*GetAuthorizedEntriesResponse, error)
}

// UnimplementedEntryServer can be embedded to have forward compatible implementations.
type UnimplementedEntryServer struct {
}

func (*UnimplementedEntryServer) ListEntries(ctx context.Context, req *ListEntriesRequest) (*ListEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEntries not implemented")
}
func (*UnimplementedEntryServer) GetEntry(ctx context.Context, req *GetEntryRequest) (*types.Entry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEntry not implemented")
}
func (*UnimplementedEntryServer) CreateEntry(ctx context.Context, req *CreateEntryRequest) (*types.Entry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntry not implemented")
}
func (*UnimplementedEntryServer) BatchCreateEntry(ctx context.Context, req *BatchCreateEntryRequest) (*BatchCreateEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchCreateEntry not implemented")
}
func (*UnimplementedEntryServer) CreateEntryIfNotExists(ctx context.Context, req *CreateEntryIfNotExistsRequest) (*CreateEntryIfNotExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntryIfNotExists not implemented")
}
func (*UnimplementedEntryServer) UpdateEntry(ctx context.Context, req *UpdateEntryRequest) (*types.Entry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntry not implemented")
}
func (*UnimplementedEntryServer) BatchUpdateEntry(ctx context.Context, req *BatchUpdateEntryRequest) (*BatchUpdateEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchUpdateEntry not implemented")
}
func (*UnimplementedEntryServer) DeleteEntry(ctx context.Context, req *DeleteEntryRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEntry not implemented")
}
func (*UnimplementedEntryServer) BatchDeleteEntry(ctx context.Context, req *BatchDeleteEntryRequest) (*BatchDeleteEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchDeleteEntry not implemented")
}
func (*UnimplementedEntryServer) GetAuthorizedEntries(ctx context.Context, req *GetAuthorizedEntriesRequest) (*GetAuthorizedEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthorizedEntries not implemented")
}

func RegisterEntryServer(s *grpc.Server, srv EntryServer) {
	s.RegisterService(&_Entry_serviceDesc, srv)
}

func _Entry_ListEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).ListEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/ListEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).ListEntries(ctx, req.(*ListEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_GetEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).GetEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/GetEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).GetEntry(ctx, req.(*GetEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_CreateEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).CreateEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/CreateEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).CreateEntry(ctx, req.(*CreateEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_BatchCreateEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchCreateEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).BatchCreateEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/BatchCreateEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).BatchCreateEntry(ctx, req.(*BatchCreateEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_CreateEntryIfNotExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntryIfNotExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).CreateEntryIfNotExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/CreateEntryIfNotExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).CreateEntryIfNotExists(ctx, req.(*CreateEntryIfNotExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_UpdateEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).UpdateEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/UpdateEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).UpdateEntry(ctx, req.(*UpdateEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_BatchUpdateEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchUpdateEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).BatchUpdateEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/BatchUpdateEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).BatchUpdateEntry(ctx, req.(*BatchUpdateEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_DeleteEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).DeleteEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/DeleteEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).DeleteEntry(ctx, req.(*DeleteEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_BatchDeleteEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchDeleteEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).BatchDeleteEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/BatchDeleteEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).BatchDeleteEntry(ctx, req.(*BatchDeleteEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_GetAuthorizedEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthorizedEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).GetAuthorizedEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.entry.v1.Entry/GetAuthorizedEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).GetAuthorizedEntries(ctx, req.(*GetAuthorizedEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Entry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spire.api.entry.v1.Entry",
	HandlerType: (*EntryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListEntries",
			Handler:    _Entry_ListEntries_Handler,
		},
		{
			MethodName: "GetEntry",
			Handler:    _Entry_GetEntry_Handler,
		},
		{
			MethodName: "CreateEntry",
			Handler:    _Entry_CreateEntry_Handler,
		},
		{
			MethodName: "BatchCreateEntry",
			Handler:    _Entry_BatchCreateEntry_Handler,
		},
		{
			MethodName: "CreateEntryIfNotExists",
			Handler:    _Entry_CreateEntryIfNotExists_Handler,
		},
		{
			MethodName: "UpdateEntry",
			Handler:    _Entry_UpdateEntry_Handler,
		},
		{
			MethodName: "BatchUpdateEntry",
			Handler:    _Entry_BatchUpdateEntry_Handler,
		},
		{
			MethodName: "DeleteEntry",
			Handler:    _Entry_DeleteEntry_Handler,
		},
		{
			MethodName: "BatchDeleteEntry",
			Handler:    _Entry_BatchDeleteEntry_Handler,
		},
		{
			MethodName: "GetAuthorizedEntries",
			Handler:    _Entry_GetAuthorizedEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "entry.proto",
}
