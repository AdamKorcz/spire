// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

package agent

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	types "github.com/spiffe/spire/proto/spire/next/types"
	svid "github.com/spiffe/spire/proto/spire/v2/types/svid"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListAgentsRequest struct {
	// Filters the agents returned by the list operation.
	Filter *ListAgentsRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAgentsRequest) Reset()         { *m = ListAgentsRequest{} }
func (m *ListAgentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAgentsRequest) ProtoMessage()    {}
func (*ListAgentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{0}
}

func (m *ListAgentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAgentsRequest.Unmarshal(m, b)
}
func (m *ListAgentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAgentsRequest.Marshal(b, m, deterministic)
}
func (m *ListAgentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAgentsRequest.Merge(m, src)
}
func (m *ListAgentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAgentsRequest.Size(m)
}
func (m *ListAgentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAgentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAgentsRequest proto.InternalMessageInfo

func (m *ListAgentsRequest) GetFilter() *ListAgentsRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListAgentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAgentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListAgentsRequest_Filter struct {
	// Filters agents to those matching the attestation type.
	ByAttestationType string `protobuf:"bytes,1,opt,name=by_attestation_type,json=byAttestationType,proto3" json:"by_attestation_type,omitempty"`
	// Filters agents to those satisfying the selector match.
	BySelectorMatch *types.SelectorMatch `protobuf:"bytes,2,opt,name=by_selector_match,json=bySelectorMatch,proto3" json:"by_selector_match,omitempty"`
	// Filters agents to those that are banned.
	ByBanned             bool     `protobuf:"varint,3,opt,name=by_banned,json=byBanned,proto3" json:"by_banned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAgentsRequest_Filter) Reset()         { *m = ListAgentsRequest_Filter{} }
func (m *ListAgentsRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListAgentsRequest_Filter) ProtoMessage()    {}
func (*ListAgentsRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{0, 0}
}

func (m *ListAgentsRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAgentsRequest_Filter.Unmarshal(m, b)
}
func (m *ListAgentsRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAgentsRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListAgentsRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAgentsRequest_Filter.Merge(m, src)
}
func (m *ListAgentsRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListAgentsRequest_Filter.Size(m)
}
func (m *ListAgentsRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAgentsRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListAgentsRequest_Filter proto.InternalMessageInfo

func (m *ListAgentsRequest_Filter) GetByAttestationType() string {
	if m != nil {
		return m.ByAttestationType
	}
	return ""
}

func (m *ListAgentsRequest_Filter) GetBySelectorMatch() *types.SelectorMatch {
	if m != nil {
		return m.BySelectorMatch
	}
	return nil
}

func (m *ListAgentsRequest_Filter) GetByBanned() bool {
	if m != nil {
		return m.ByBanned
	}
	return false
}

type ListAgentsResponse struct {
	// The agents.
	Agents []*types.Agent `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	// The page token for the next request. Empty if there are no more results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAgentsResponse) Reset()         { *m = ListAgentsResponse{} }
func (m *ListAgentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListAgentsResponse) ProtoMessage()    {}
func (*ListAgentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{1}
}

func (m *ListAgentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAgentsResponse.Unmarshal(m, b)
}
func (m *ListAgentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAgentsResponse.Marshal(b, m, deterministic)
}
func (m *ListAgentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAgentsResponse.Merge(m, src)
}
func (m *ListAgentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListAgentsResponse.Size(m)
}
func (m *ListAgentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAgentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAgentsResponse proto.InternalMessageInfo

func (m *ListAgentsResponse) GetAgents() []*types.Agent {
	if m != nil {
		return m.Agents
	}
	return nil
}

func (m *ListAgentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetAgentRequest struct {
	// Required. The SPIFFE ID of the agent.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// An output mask indicating which agent fields are set in the response.
	OutputMask           *types.AgentMask `protobuf:"bytes,2,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetAgentRequest) Reset()         { *m = GetAgentRequest{} }
func (m *GetAgentRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentRequest) ProtoMessage()    {}
func (*GetAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{2}
}

func (m *GetAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentRequest.Unmarshal(m, b)
}
func (m *GetAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentRequest.Merge(m, src)
}
func (m *GetAgentRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentRequest.Size(m)
}
func (m *GetAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentRequest proto.InternalMessageInfo

func (m *GetAgentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetAgentRequest) GetOutputMask() *types.AgentMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

type DeleteAgentRequest struct {
	// Required. The SPIFFE ID of the agent.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAgentRequest) Reset()         { *m = DeleteAgentRequest{} }
func (m *DeleteAgentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAgentRequest) ProtoMessage()    {}
func (*DeleteAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{3}
}

func (m *DeleteAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAgentRequest.Unmarshal(m, b)
}
func (m *DeleteAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAgentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAgentRequest.Merge(m, src)
}
func (m *DeleteAgentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAgentRequest.Size(m)
}
func (m *DeleteAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAgentRequest proto.InternalMessageInfo

func (m *DeleteAgentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BanAgentRequest struct {
	// Required. The SPIFFE ID of the agent.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BanAgentRequest) Reset()         { *m = BanAgentRequest{} }
func (m *BanAgentRequest) String() string { return proto.CompactTextString(m) }
func (*BanAgentRequest) ProtoMessage()    {}
func (*BanAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{4}
}

func (m *BanAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BanAgentRequest.Unmarshal(m, b)
}
func (m *BanAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BanAgentRequest.Marshal(b, m, deterministic)
}
func (m *BanAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BanAgentRequest.Merge(m, src)
}
func (m *BanAgentRequest) XXX_Size() int {
	return xxx_messageInfo_BanAgentRequest.Size(m)
}
func (m *BanAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BanAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BanAgentRequest proto.InternalMessageInfo

func (m *BanAgentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateJoinTokenRequest struct {
	// Required. How long until the token expires (in seconds).
	Ttl int32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// An optional token value to use for the token. Must be unique. If unset,
	// the server will generate a value.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// An optional SPIFFE ID to assign to the agent beyond that given by
	// join token attestation. If set, this results in an entry being created
	// that maps the attestation assigned agent ID to this ID.
	AgentId              string   `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateJoinTokenRequest) Reset()         { *m = CreateJoinTokenRequest{} }
func (m *CreateJoinTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CreateJoinTokenRequest) ProtoMessage()    {}
func (*CreateJoinTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{5}
}

func (m *CreateJoinTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJoinTokenRequest.Unmarshal(m, b)
}
func (m *CreateJoinTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJoinTokenRequest.Marshal(b, m, deterministic)
}
func (m *CreateJoinTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJoinTokenRequest.Merge(m, src)
}
func (m *CreateJoinTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CreateJoinTokenRequest.Size(m)
}
func (m *CreateJoinTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJoinTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJoinTokenRequest proto.InternalMessageInfo

func (m *CreateJoinTokenRequest) GetTtl() int32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *CreateJoinTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CreateJoinTokenRequest) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

type AttestAgentRequest struct {
	// Required. The data for the step in the attestation flow.
	//
	// Types that are valid to be assigned to Step:
	//	*AttestAgentRequest_Params_
	//	*AttestAgentRequest_ChallengeResponse
	Step                 isAttestAgentRequest_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AttestAgentRequest) Reset()         { *m = AttestAgentRequest{} }
func (m *AttestAgentRequest) String() string { return proto.CompactTextString(m) }
func (*AttestAgentRequest) ProtoMessage()    {}
func (*AttestAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{6}
}

func (m *AttestAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestAgentRequest.Unmarshal(m, b)
}
func (m *AttestAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestAgentRequest.Marshal(b, m, deterministic)
}
func (m *AttestAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestAgentRequest.Merge(m, src)
}
func (m *AttestAgentRequest) XXX_Size() int {
	return xxx_messageInfo_AttestAgentRequest.Size(m)
}
func (m *AttestAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttestAgentRequest proto.InternalMessageInfo

type isAttestAgentRequest_Step interface {
	isAttestAgentRequest_Step()
}

type AttestAgentRequest_Params_ struct {
	Params *AttestAgentRequest_Params `protobuf:"bytes,1,opt,name=params,proto3,oneof"`
}

type AttestAgentRequest_ChallengeResponse struct {
	ChallengeResponse []byte `protobuf:"bytes,2,opt,name=challenge_response,json=challengeResponse,proto3,oneof"`
}

func (*AttestAgentRequest_Params_) isAttestAgentRequest_Step() {}

func (*AttestAgentRequest_ChallengeResponse) isAttestAgentRequest_Step() {}

func (m *AttestAgentRequest) GetStep() isAttestAgentRequest_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *AttestAgentRequest) GetParams() *AttestAgentRequest_Params {
	if x, ok := m.GetStep().(*AttestAgentRequest_Params_); ok {
		return x.Params
	}
	return nil
}

func (m *AttestAgentRequest) GetChallengeResponse() []byte {
	if x, ok := m.GetStep().(*AttestAgentRequest_ChallengeResponse); ok {
		return x.ChallengeResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AttestAgentRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AttestAgentRequest_Params_)(nil),
		(*AttestAgentRequest_ChallengeResponse)(nil),
	}
}

type AttestAgentRequest_Params struct {
	// Required. The attestation data.
	Data *types.AttestationData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Required. The X509-SVID parameters.
	Params               *svid.X509SVIDParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AttestAgentRequest_Params) Reset()         { *m = AttestAgentRequest_Params{} }
func (m *AttestAgentRequest_Params) String() string { return proto.CompactTextString(m) }
func (*AttestAgentRequest_Params) ProtoMessage()    {}
func (*AttestAgentRequest_Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{6, 0}
}

func (m *AttestAgentRequest_Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestAgentRequest_Params.Unmarshal(m, b)
}
func (m *AttestAgentRequest_Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestAgentRequest_Params.Marshal(b, m, deterministic)
}
func (m *AttestAgentRequest_Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestAgentRequest_Params.Merge(m, src)
}
func (m *AttestAgentRequest_Params) XXX_Size() int {
	return xxx_messageInfo_AttestAgentRequest_Params.Size(m)
}
func (m *AttestAgentRequest_Params) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestAgentRequest_Params.DiscardUnknown(m)
}

var xxx_messageInfo_AttestAgentRequest_Params proto.InternalMessageInfo

func (m *AttestAgentRequest_Params) GetData() *types.AttestationData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AttestAgentRequest_Params) GetParams() *svid.X509SVIDParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type AttestAgentResponse struct {
	// Types that are valid to be assigned to Step:
	//	*AttestAgentResponse_Result_
	//	*AttestAgentResponse_Challenge
	Step                 isAttestAgentResponse_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AttestAgentResponse) Reset()         { *m = AttestAgentResponse{} }
func (m *AttestAgentResponse) String() string { return proto.CompactTextString(m) }
func (*AttestAgentResponse) ProtoMessage()    {}
func (*AttestAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{7}
}

func (m *AttestAgentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestAgentResponse.Unmarshal(m, b)
}
func (m *AttestAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestAgentResponse.Marshal(b, m, deterministic)
}
func (m *AttestAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestAgentResponse.Merge(m, src)
}
func (m *AttestAgentResponse) XXX_Size() int {
	return xxx_messageInfo_AttestAgentResponse.Size(m)
}
func (m *AttestAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttestAgentResponse proto.InternalMessageInfo

type isAttestAgentResponse_Step interface {
	isAttestAgentResponse_Step()
}

type AttestAgentResponse_Result_ struct {
	Result *AttestAgentResponse_Result `protobuf:"bytes,1,opt,name=result,proto3,oneof"`
}

type AttestAgentResponse_Challenge struct {
	Challenge []byte `protobuf:"bytes,2,opt,name=challenge,proto3,oneof"`
}

func (*AttestAgentResponse_Result_) isAttestAgentResponse_Step() {}

func (*AttestAgentResponse_Challenge) isAttestAgentResponse_Step() {}

func (m *AttestAgentResponse) GetStep() isAttestAgentResponse_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *AttestAgentResponse) GetResult() *AttestAgentResponse_Result {
	if x, ok := m.GetStep().(*AttestAgentResponse_Result_); ok {
		return x.Result
	}
	return nil
}

func (m *AttestAgentResponse) GetChallenge() []byte {
	if x, ok := m.GetStep().(*AttestAgentResponse_Challenge); ok {
		return x.Challenge
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AttestAgentResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AttestAgentResponse_Result_)(nil),
		(*AttestAgentResponse_Challenge)(nil),
	}
}

type AttestAgentResponse_Result struct {
	// The agent X509-SVID.
	Identity             *svid.X509SVID `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AttestAgentResponse_Result) Reset()         { *m = AttestAgentResponse_Result{} }
func (m *AttestAgentResponse_Result) String() string { return proto.CompactTextString(m) }
func (*AttestAgentResponse_Result) ProtoMessage()    {}
func (*AttestAgentResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{7, 0}
}

func (m *AttestAgentResponse_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestAgentResponse_Result.Unmarshal(m, b)
}
func (m *AttestAgentResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestAgentResponse_Result.Marshal(b, m, deterministic)
}
func (m *AttestAgentResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestAgentResponse_Result.Merge(m, src)
}
func (m *AttestAgentResponse_Result) XXX_Size() int {
	return xxx_messageInfo_AttestAgentResponse_Result.Size(m)
}
func (m *AttestAgentResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestAgentResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_AttestAgentResponse_Result proto.InternalMessageInfo

func (m *AttestAgentResponse_Result) GetIdentity() *svid.X509SVID {
	if m != nil {
		return m.Identity
	}
	return nil
}

type RenewAgentRequest struct {
	// Required. The data for the step in the renewal flow.
	//
	// Types that are valid to be assigned to Step:
	//	*RenewAgentRequest_Params
	//	*RenewAgentRequest_Ack_
	Step                 isRenewAgentRequest_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *RenewAgentRequest) Reset()         { *m = RenewAgentRequest{} }
func (m *RenewAgentRequest) String() string { return proto.CompactTextString(m) }
func (*RenewAgentRequest) ProtoMessage()    {}
func (*RenewAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{8}
}

func (m *RenewAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewAgentRequest.Unmarshal(m, b)
}
func (m *RenewAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewAgentRequest.Marshal(b, m, deterministic)
}
func (m *RenewAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewAgentRequest.Merge(m, src)
}
func (m *RenewAgentRequest) XXX_Size() int {
	return xxx_messageInfo_RenewAgentRequest.Size(m)
}
func (m *RenewAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenewAgentRequest proto.InternalMessageInfo

type isRenewAgentRequest_Step interface {
	isRenewAgentRequest_Step()
}

type RenewAgentRequest_Params struct {
	Params *svid.X509SVIDParams `protobuf:"bytes,1,opt,name=params,proto3,oneof"`
}

type RenewAgentRequest_Ack_ struct {
	Ack *RenewAgentRequest_Ack `protobuf:"bytes,2,opt,name=ack,proto3,oneof"`
}

func (*RenewAgentRequest_Params) isRenewAgentRequest_Step() {}

func (*RenewAgentRequest_Ack_) isRenewAgentRequest_Step() {}

func (m *RenewAgentRequest) GetStep() isRenewAgentRequest_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *RenewAgentRequest) GetParams() *svid.X509SVIDParams {
	if x, ok := m.GetStep().(*RenewAgentRequest_Params); ok {
		return x.Params
	}
	return nil
}

func (m *RenewAgentRequest) GetAck() *RenewAgentRequest_Ack {
	if x, ok := m.GetStep().(*RenewAgentRequest_Ack_); ok {
		return x.Ack
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RenewAgentRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RenewAgentRequest_Params)(nil),
		(*RenewAgentRequest_Ack_)(nil),
	}
}

type RenewAgentRequest_Ack struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewAgentRequest_Ack) Reset()         { *m = RenewAgentRequest_Ack{} }
func (m *RenewAgentRequest_Ack) String() string { return proto.CompactTextString(m) }
func (*RenewAgentRequest_Ack) ProtoMessage()    {}
func (*RenewAgentRequest_Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{8, 0}
}

func (m *RenewAgentRequest_Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewAgentRequest_Ack.Unmarshal(m, b)
}
func (m *RenewAgentRequest_Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewAgentRequest_Ack.Marshal(b, m, deterministic)
}
func (m *RenewAgentRequest_Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewAgentRequest_Ack.Merge(m, src)
}
func (m *RenewAgentRequest_Ack) XXX_Size() int {
	return xxx_messageInfo_RenewAgentRequest_Ack.Size(m)
}
func (m *RenewAgentRequest_Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewAgentRequest_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_RenewAgentRequest_Ack proto.InternalMessageInfo

type RenewAgentResponse struct {
	// The renewed X509-SVID
	Svid                 *svid.X509SVID `protobuf:"bytes,1,opt,name=svid,proto3" json:"svid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RenewAgentResponse) Reset()         { *m = RenewAgentResponse{} }
func (m *RenewAgentResponse) String() string { return proto.CompactTextString(m) }
func (*RenewAgentResponse) ProtoMessage()    {}
func (*RenewAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{9}
}

func (m *RenewAgentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewAgentResponse.Unmarshal(m, b)
}
func (m *RenewAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewAgentResponse.Marshal(b, m, deterministic)
}
func (m *RenewAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewAgentResponse.Merge(m, src)
}
func (m *RenewAgentResponse) XXX_Size() int {
	return xxx_messageInfo_RenewAgentResponse.Size(m)
}
func (m *RenewAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenewAgentResponse proto.InternalMessageInfo

func (m *RenewAgentResponse) GetSvid() *svid.X509SVID {
	if m != nil {
		return m.Svid
	}
	return nil
}

func init() {
	proto.RegisterType((*ListAgentsRequest)(nil), "spire.api.agent.v1.ListAgentsRequest")
	proto.RegisterType((*ListAgentsRequest_Filter)(nil), "spire.api.agent.v1.ListAgentsRequest.Filter")
	proto.RegisterType((*ListAgentsResponse)(nil), "spire.api.agent.v1.ListAgentsResponse")
	proto.RegisterType((*GetAgentRequest)(nil), "spire.api.agent.v1.GetAgentRequest")
	proto.RegisterType((*DeleteAgentRequest)(nil), "spire.api.agent.v1.DeleteAgentRequest")
	proto.RegisterType((*BanAgentRequest)(nil), "spire.api.agent.v1.BanAgentRequest")
	proto.RegisterType((*CreateJoinTokenRequest)(nil), "spire.api.agent.v1.CreateJoinTokenRequest")
	proto.RegisterType((*AttestAgentRequest)(nil), "spire.api.agent.v1.AttestAgentRequest")
	proto.RegisterType((*AttestAgentRequest_Params)(nil), "spire.api.agent.v1.AttestAgentRequest.Params")
	proto.RegisterType((*AttestAgentResponse)(nil), "spire.api.agent.v1.AttestAgentResponse")
	proto.RegisterType((*AttestAgentResponse_Result)(nil), "spire.api.agent.v1.AttestAgentResponse.Result")
	proto.RegisterType((*RenewAgentRequest)(nil), "spire.api.agent.v1.RenewAgentRequest")
	proto.RegisterType((*RenewAgentRequest_Ack)(nil), "spire.api.agent.v1.RenewAgentRequest.Ack")
	proto.RegisterType((*RenewAgentResponse)(nil), "spire.api.agent.v1.RenewAgentResponse")
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor_56ede974c0020f77) }

var fileDescriptor_56ede974c0020f77 = []byte{
	// 896 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xe1, 0x72, 0xdb, 0x44,
	0x10, 0x8e, 0xec, 0x58, 0x38, 0x6b, 0xc0, 0xf8, 0xca, 0x64, 0x82, 0x5a, 0xc0, 0x35, 0xa5, 0x98,
	0x0e, 0x9c, 0xd2, 0x30, 0x05, 0x4a, 0xa7, 0x33, 0x24, 0x35, 0x4d, 0xca, 0x90, 0x99, 0xce, 0xa5,
	0x30, 0x4c, 0xfb, 0x43, 0x73, 0xb2, 0x37, 0xce, 0x61, 0x5b, 0x12, 0xbe, 0x73, 0xa8, 0xfa, 0x0c,
	0xbc, 0x42, 0x1f, 0x83, 0x87, 0xe0, 0x21, 0x78, 0x17, 0x46, 0x77, 0x27, 0x5b, 0x8e, 0xd4, 0x26,
	0xff, 0xa4, 0xd3, 0xf7, 0xed, 0x7e, 0xfb, 0xed, 0xdd, 0x9e, 0xa0, 0xc5, 0xc7, 0x18, 0x29, 0x9a,
	0xcc, 0x63, 0x15, 0x13, 0x22, 0x13, 0x31, 0x47, 0xca, 0x13, 0x41, 0xcd, 0xf2, 0xf9, 0x5d, 0xef,
	0xfa, 0x38, 0x8e, 0xc7, 0x53, 0xf4, 0x35, 0x22, 0x5c, 0x9c, 0xfa, 0x38, 0x4b, 0x54, 0x6a, 0x08,
	0xde, 0x0d, 0x4d, 0xf0, 0x23, 0x7c, 0xa9, 0x7c, 0x95, 0x26, 0x28, 0xfd, 0x42, 0x38, 0xaf, 0x57,
	0xfe, 0xaa, 0x14, 0x4a, 0xc5, 0x95, 0x88, 0x23, 0x8b, 0xb9, 0x59, 0xc2, 0xfc, 0x11, 0x8b, 0x28,
	0x50, 0xf1, 0x04, 0x73, 0xc8, 0xa7, 0x25, 0x88, 0xc4, 0x29, 0x0e, 0x55, 0x3c, 0xb7, 0x80, 0x5b,
	0x65, 0xc0, 0xb9, 0x18, 0xf9, 0x2f, 0xef, 0xed, 0xde, 0xcf, 0x1e, 0x0c, 0xaa, 0xf7, 0x4f, 0x0d,
	0x3a, 0xbf, 0x08, 0xa9, 0xf6, 0x33, 0x85, 0x92, 0xe1, 0x9f, 0x0b, 0x94, 0x8a, 0x0c, 0xc0, 0x3d,
	0x15, 0x53, 0x85, 0xf3, 0x1d, 0xa7, 0xeb, 0xf4, 0x5b, 0x7b, 0x5f, 0xd1, 0xb2, 0x07, 0xb4, 0x44,
	0xa3, 0x8f, 0x35, 0x87, 0x59, 0x2e, 0xb9, 0x0e, 0x5b, 0x09, 0x1f, 0x63, 0x20, 0xc5, 0x2b, 0xdc,
	0xa9, 0x75, 0x9d, 0x7e, 0x83, 0x35, 0xb3, 0x85, 0x13, 0xf1, 0x0a, 0xc9, 0xc7, 0x00, 0xfa, 0xa3,
	0xae, 0x69, 0xa7, 0xde, 0x75, 0xfa, 0x5b, 0x4c, 0xc3, 0x9f, 0x65, 0x0b, 0xde, 0x6b, 0x07, 0x5c,
	0x13, 0x8e, 0x50, 0xb8, 0x16, 0xa6, 0x41, 0xc1, 0xa4, 0x20, 0x2b, 0x47, 0x2b, 0xdb, 0x62, 0x9d,
	0x30, 0xdd, 0x5f, 0x7d, 0x79, 0x96, 0x26, 0x48, 0x1e, 0x43, 0x27, 0x4c, 0x83, 0xdc, 0x8d, 0x60,
	0xc6, 0xd5, 0xf0, 0x4c, 0xa7, 0x6f, 0xed, 0x79, 0xb6, 0x0e, 0xed, 0x07, 0x3d, 0xb1, 0x90, 0xe3,
	0x0c, 0xc1, 0xda, 0x61, 0xba, 0xb6, 0x90, 0xc9, 0x0f, 0xd3, 0x20, 0xe4, 0x51, 0x84, 0x23, 0x2d,
	0xb0, 0xc9, 0x9a, 0x61, 0x7a, 0xa0, 0xdf, 0x7b, 0x67, 0x40, 0x8a, 0xf5, 0xcb, 0x24, 0x8e, 0x24,
	0x92, 0x3b, 0xe0, 0x6a, 0x7b, 0xe4, 0x8e, 0xd3, 0xad, 0xf7, 0x5b, 0x7b, 0x64, 0x2d, 0x9f, 0x06,
	0x33, 0x8b, 0x20, 0xb7, 0xa1, 0x9d, 0xf5, 0x26, 0x28, 0xb8, 0x50, 0xd3, 0x25, 0xbd, 0x97, 0x2d,
	0x3f, 0xcd, 0x9d, 0xe8, 0x3d, 0x87, 0xf6, 0x21, 0x9a, 0x44, 0x79, 0x7b, 0xde, 0x87, 0x9a, 0x18,
	0x59, 0x03, 0x6a, 0x62, 0x44, 0xbe, 0x83, 0x56, 0xbc, 0x50, 0xc9, 0x42, 0x05, 0x33, 0x2e, 0x27,
	0xb6, 0xd6, 0xed, 0x72, 0xee, 0x63, 0x2e, 0x27, 0x0c, 0x0c, 0x34, 0x7b, 0xee, 0xdd, 0x02, 0x32,
	0xc0, 0x29, 0x2a, 0x7c, 0x5b, 0xf8, 0xde, 0x4d, 0x68, 0x1f, 0xf0, 0xe8, 0xad, 0x90, 0x17, 0xb0,
	0xfd, 0x68, 0x8e, 0x5c, 0xe1, 0xcf, 0xb1, 0x88, 0xb4, 0xee, 0x1c, 0xf9, 0x01, 0xd4, 0x95, 0x9a,
	0x6a, 0xff, 0x1a, 0x2c, 0x7b, 0x24, 0x1f, 0x42, 0xc3, 0x94, 0x6b, 0xe8, 0xe6, 0x85, 0x7c, 0x04,
	0x4d, 0x6d, 0x4c, 0x20, 0x46, 0xd6, 0x87, 0x77, 0xf4, 0xfb, 0x93, 0x51, 0xef, 0xef, 0x1a, 0x10,
	0xd3, 0xe4, 0x35, 0x0d, 0x87, 0xe0, 0x26, 0x7c, 0xce, 0x67, 0xd2, 0x6e, 0xd2, 0xaf, 0xab, 0x36,
	0x69, 0x99, 0x47, 0x9f, 0x6a, 0xd2, 0xd1, 0x06, 0xb3, 0x74, 0xe2, 0x03, 0x19, 0x9e, 0xf1, 0xe9,
	0x14, 0xa3, 0x31, 0x06, 0x73, 0xdb, 0x4b, 0x2d, 0xe2, 0xdd, 0xa3, 0x0d, 0xd6, 0x59, 0x7e, 0xcb,
	0xdb, 0xec, 0x29, 0x70, 0x4d, 0x10, 0xb2, 0x0b, 0x9b, 0x23, 0xae, 0xb8, 0x55, 0x70, 0x63, 0xdd,
	0xf2, 0xd5, 0xbe, 0x1c, 0x70, 0xc5, 0x99, 0x46, 0x92, 0xef, 0x97, 0xaa, 0x4d, 0x9b, 0xba, 0x6b,
	0x1c, 0x7d, 0x32, 0x7f, 0xbf, 0xb7, 0x7b, 0xff, 0xe4, 0xb7, 0x27, 0x03, 0x93, 0x23, 0x97, 0x79,
	0xe0, 0xc2, 0xa6, 0x54, 0x98, 0xf4, 0xfe, 0x75, 0xe0, 0xda, 0x5a, 0x59, 0x76, 0xf3, 0x1d, 0x81,
	0x3b, 0x47, 0xb9, 0x98, 0x2a, 0xab, 0x86, 0x5e, 0xea, 0x87, 0x21, 0x52, 0xa6, 0x59, 0x99, 0x21,
	0x86, 0x4f, 0x3e, 0x81, 0xad, 0x65, 0xd1, 0x4b, 0x1f, 0x56, 0x4b, 0xde, 0x8f, 0xe0, 0x1a, 0x0e,
	0xf9, 0x16, 0x9a, 0x62, 0x84, 0x91, 0x12, 0x2a, 0xb5, 0x59, 0xbd, 0x37, 0xd7, 0xc3, 0x96, 0xd8,
	0x65, 0x2d, 0xaf, 0x1d, 0xe8, 0x30, 0x8c, 0xf0, 0xaf, 0xb5, 0xce, 0xfe, 0x70, 0xa1, 0xb3, 0x97,
	0x7a, 0x54, 0x68, 0xe6, 0x43, 0xa8, 0xf3, 0x61, 0x7e, 0x06, 0xbe, 0xac, 0xb2, 0xa0, 0x94, 0x8f,
	0xee, 0x0f, 0x27, 0x47, 0x1b, 0x2c, 0xe3, 0x79, 0x0d, 0xa8, 0xef, 0x0f, 0x27, 0x4b, 0x7d, 0x03,
	0x20, 0x45, 0xb8, 0x75, 0x9a, 0xc2, 0x66, 0x26, 0xe2, 0x0a, 0x15, 0x6b, 0xdc, 0xde, 0x7f, 0x9b,
	0xd0, 0xd0, 0x11, 0xc8, 0x0b, 0x80, 0xd5, 0xd8, 0x20, 0x9f, 0x5f, 0x69, 0xac, 0x7a, 0xb7, 0x2f,
	0x83, 0x59, 0x59, 0x8f, 0xa0, 0x99, 0x4f, 0x0a, 0xf2, 0x59, 0x15, 0xe7, 0xc2, 0x1c, 0xf1, 0x2a,
	0xc6, 0x13, 0x39, 0x86, 0x56, 0x61, 0x24, 0x90, 0xca, 0xdc, 0xe5, 0x99, 0xe1, 0x6d, 0x53, 0x73,
	0x23, 0xd2, 0xfc, 0x46, 0xa4, 0x3f, 0x65, 0x37, 0x22, 0x39, 0x84, 0x66, 0x3e, 0x3b, 0xaa, 0x35,
	0x5d, 0x98, 0x2c, 0x6f, 0x0c, 0xf4, 0x2b, 0xb4, 0x2f, 0x4c, 0x18, 0x72, 0xa7, 0x2a, 0x5e, 0xf5,
	0x18, 0xf2, 0xd6, 0xa7, 0xe1, 0x2a, 0x46, 0x08, 0xad, 0xc2, 0x91, 0xa8, 0x2e, 0xb7, 0x3c, 0x43,
	0xbc, 0x2f, 0xae, 0x78, 0xb6, 0xfa, 0xce, 0xae, 0x43, 0x02, 0x80, 0xd5, 0x26, 0xaa, 0x6e, 0x7a,
	0x69, 0x4f, 0x56, 0x37, 0xbd, 0xbc, 0x17, 0xb3, 0x04, 0x07, 0x0f, 0x9f, 0x3f, 0x18, 0x0b, 0x75,
	0xb6, 0x08, 0xe9, 0x30, 0x9e, 0xf9, 0x32, 0x11, 0xa7, 0xa7, 0xe8, 0x9b, 0xeb, 0x5f, 0xbb, 0xe8,
	0x17, 0x7e, 0x05, 0x78, 0x22, 0xcc, 0xef, 0x88, 0x7f, 0x7e, 0xf7, 0x81, 0x7e, 0x08, 0x5d, 0x0d,
	0xfa, 0xe6, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x28, 0x34, 0xb1, 0xf6, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	// Lists agents.
	//
	// The caller must be local or present an admin X509-SVID.
	ListAgents(ctx context.Context, in *ListAgentsRequest, opts ...grpc.CallOption) (*ListAgentsResponse, error)
	// Gets an agent.
	//
	// The caller must be local or present an admin X509-SVID.
	GetAgent(ctx context.Context, in *GetAgentRequest, opts ...grpc.CallOption) (*types.Agent, error)
	// Deletes an agent. The agent can come back into the trust domain through
	// the Issuer AttestAgent RPC.
	//
	// The caller must be local or present an admin X509-SVID.
	DeleteAgent(ctx context.Context, in *DeleteAgentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Bans an agent. This evicts the agent and prevents it from rejoining the
	// trust domain through attestation until the ban is lifted via a call to
	// DeleteAgent.
	//
	// The caller must be local or present an admin X509-SVID.
	BanAgent(ctx context.Context, in *BanAgentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Creates an agent join token. The token can be used during attestation to
	// join the trust domain.
	//
	// The caller must be local or present an admin X509-SVID.
	CreateJoinToken(ctx context.Context, in *CreateJoinTokenRequest, opts ...grpc.CallOption) (*types.JoinToken, error)
	// Attests the agent via node attestation, using a bidirectional stream to
	// faciliate attestation methods that require challenge/response.
	//
	// The caller is not authenticated.
	AttestAgent(ctx context.Context, opts ...grpc.CallOption) (Agent_AttestAgentClient, error)
	// Renews the agent and returns a new X509-SVID using a bidirectional
	// stream to facilitate two-phase commit of the renewal.
	//
	// The caller must present an active agent X509-SVID, i.e. the X509-SVID
	// returned by the AttestAgent or subsequent RenewAgent call.
	RenewAgent(ctx context.Context, opts ...grpc.CallOption) (Agent_RenewAgentClient, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) ListAgents(ctx context.Context, in *ListAgentsRequest, opts ...grpc.CallOption) (*ListAgentsResponse, error) {
	out := new(ListAgentsResponse)
	err := c.cc.Invoke(ctx, "/spire.api.agent.v1.Agent/ListAgents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) GetAgent(ctx context.Context, in *GetAgentRequest, opts ...grpc.CallOption) (*types.Agent, error) {
	out := new(types.Agent)
	err := c.cc.Invoke(ctx, "/spire.api.agent.v1.Agent/GetAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) DeleteAgent(ctx context.Context, in *DeleteAgentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spire.api.agent.v1.Agent/DeleteAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) BanAgent(ctx context.Context, in *BanAgentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spire.api.agent.v1.Agent/BanAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) CreateJoinToken(ctx context.Context, in *CreateJoinTokenRequest, opts ...grpc.CallOption) (*types.JoinToken, error) {
	out := new(types.JoinToken)
	err := c.cc.Invoke(ctx, "/spire.api.agent.v1.Agent/CreateJoinToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) AttestAgent(ctx context.Context, opts ...grpc.CallOption) (Agent_AttestAgentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/spire.api.agent.v1.Agent/AttestAgent", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentAttestAgentClient{stream}
	return x, nil
}

type Agent_AttestAgentClient interface {
	Send(*AttestAgentRequest) error
	Recv() (*AttestAgentResponse, error)
	grpc.ClientStream
}

type agentAttestAgentClient struct {
	grpc.ClientStream
}

func (x *agentAttestAgentClient) Send(m *AttestAgentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentAttestAgentClient) Recv() (*AttestAgentResponse, error) {
	m := new(AttestAgentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) RenewAgent(ctx context.Context, opts ...grpc.CallOption) (Agent_RenewAgentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[1], "/spire.api.agent.v1.Agent/RenewAgent", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentRenewAgentClient{stream}
	return x, nil
}

type Agent_RenewAgentClient interface {
	Send(*RenewAgentRequest) error
	Recv() (*RenewAgentResponse, error)
	grpc.ClientStream
}

type agentRenewAgentClient struct {
	grpc.ClientStream
}

func (x *agentRenewAgentClient) Send(m *RenewAgentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentRenewAgentClient) Recv() (*RenewAgentResponse, error) {
	m := new(RenewAgentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	// Lists agents.
	//
	// The caller must be local or present an admin X509-SVID.
	ListAgents(context.Context, *ListAgentsRequest) (*ListAgentsResponse, error)
	// Gets an agent.
	//
	// The caller must be local or present an admin X509-SVID.
	GetAgent(context.Context, *GetAgentRequest) (*types.Agent, error)
	// Deletes an agent. The agent can come back into the trust domain through
	// the Issuer AttestAgent RPC.
	//
	// The caller must be local or present an admin X509-SVID.
	DeleteAgent(context.Context, *DeleteAgentRequest) (*empty.Empty, error)
	// Bans an agent. This evicts the agent and prevents it from rejoining the
	// trust domain through attestation until the ban is lifted via a call to
	// DeleteAgent.
	//
	// The caller must be local or present an admin X509-SVID.
	BanAgent(context.Context, *BanAgentRequest) (*empty.Empty, error)
	// Creates an agent join token. The token can be used during attestation to
	// join the trust domain.
	//
	// The caller must be local or present an admin X509-SVID.
	CreateJoinToken(context.Context, *CreateJoinTokenRequest) (*types.JoinToken, error)
	// Attests the agent via node attestation, using a bidirectional stream to
	// faciliate attestation methods that require challenge/response.
	//
	// The caller is not authenticated.
	AttestAgent(Agent_AttestAgentServer) error
	// Renews the agent and returns a new X509-SVID using a bidirectional
	// stream to facilitate two-phase commit of the renewal.
	//
	// The caller must present an active agent X509-SVID, i.e. the X509-SVID
	// returned by the AttestAgent or subsequent RenewAgent call.
	RenewAgent(Agent_RenewAgentServer) error
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) ListAgents(ctx context.Context, req *ListAgentsRequest) (*ListAgentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAgents not implemented")
}
func (*UnimplementedAgentServer) GetAgent(ctx context.Context, req *GetAgentRequest) (*types.Agent, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgent not implemented")
}
func (*UnimplementedAgentServer) DeleteAgent(ctx context.Context, req *DeleteAgentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAgent not implemented")
}
func (*UnimplementedAgentServer) BanAgent(ctx context.Context, req *BanAgentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BanAgent not implemented")
}
func (*UnimplementedAgentServer) CreateJoinToken(ctx context.Context, req *CreateJoinTokenRequest) (*types.JoinToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJoinToken not implemented")
}
func (*UnimplementedAgentServer) AttestAgent(srv Agent_AttestAgentServer) error {
	return status.Errorf(codes.Unimplemented, "method AttestAgent not implemented")
}
func (*UnimplementedAgentServer) RenewAgent(srv Agent_RenewAgentServer) error {
	return status.Errorf(codes.Unimplemented, "method RenewAgent not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_ListAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAgentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).ListAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.agent.v1.Agent/ListAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).ListAgents(ctx, req.(*ListAgentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_GetAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.agent.v1.Agent/GetAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetAgent(ctx, req.(*GetAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_DeleteAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).DeleteAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.agent.v1.Agent/DeleteAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).DeleteAgent(ctx, req.(*DeleteAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_BanAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BanAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).BanAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.agent.v1.Agent/BanAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).BanAgent(ctx, req.(*BanAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_CreateJoinToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJoinTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).CreateJoinToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.agent.v1.Agent/CreateJoinToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).CreateJoinToken(ctx, req.(*CreateJoinTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_AttestAgent_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).AttestAgent(&agentAttestAgentServer{stream})
}

type Agent_AttestAgentServer interface {
	Send(*AttestAgentResponse) error
	Recv() (*AttestAgentRequest, error)
	grpc.ServerStream
}

type agentAttestAgentServer struct {
	grpc.ServerStream
}

func (x *agentAttestAgentServer) Send(m *AttestAgentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentAttestAgentServer) Recv() (*AttestAgentRequest, error) {
	m := new(AttestAgentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_RenewAgent_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).RenewAgent(&agentRenewAgentServer{stream})
}

type Agent_RenewAgentServer interface {
	Send(*RenewAgentResponse) error
	Recv() (*RenewAgentRequest, error)
	grpc.ServerStream
}

type agentRenewAgentServer struct {
	grpc.ServerStream
}

func (x *agentRenewAgentServer) Send(m *RenewAgentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentRenewAgentServer) Recv() (*RenewAgentRequest, error) {
	m := new(RenewAgentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spire.api.agent.v1.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAgents",
			Handler:    _Agent_ListAgents_Handler,
		},
		{
			MethodName: "GetAgent",
			Handler:    _Agent_GetAgent_Handler,
		},
		{
			MethodName: "DeleteAgent",
			Handler:    _Agent_DeleteAgent_Handler,
		},
		{
			MethodName: "BanAgent",
			Handler:    _Agent_BanAgent_Handler,
		},
		{
			MethodName: "CreateJoinToken",
			Handler:    _Agent_CreateJoinToken_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AttestAgent",
			Handler:       _Agent_AttestAgent_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "RenewAgent",
			Handler:       _Agent_RenewAgent_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "agent.proto",
}
