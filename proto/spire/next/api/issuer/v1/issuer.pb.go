// Code generated by protoc-gen-go. DO NOT EDIT.
// source: issuer.proto

package issuer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	types "github.com/spiffe/spire/proto/spire/next/types"
	svid "github.com/spiffe/spire/proto/spire/v2/types/svid"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AttestAgentRequest struct {
	// Required. The data for the step in the attestation flow.
	//
	// Types that are valid to be assigned to Step:
	//	*AttestAgentRequest_Params_
	//	*AttestAgentRequest_ChallengeResponse
	Step                 isAttestAgentRequest_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AttestAgentRequest) Reset()         { *m = AttestAgentRequest{} }
func (m *AttestAgentRequest) String() string { return proto.CompactTextString(m) }
func (*AttestAgentRequest) ProtoMessage()    {}
func (*AttestAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{0}
}

func (m *AttestAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestAgentRequest.Unmarshal(m, b)
}
func (m *AttestAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestAgentRequest.Marshal(b, m, deterministic)
}
func (m *AttestAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestAgentRequest.Merge(m, src)
}
func (m *AttestAgentRequest) XXX_Size() int {
	return xxx_messageInfo_AttestAgentRequest.Size(m)
}
func (m *AttestAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttestAgentRequest proto.InternalMessageInfo

type isAttestAgentRequest_Step interface {
	isAttestAgentRequest_Step()
}

type AttestAgentRequest_Params_ struct {
	Params *AttestAgentRequest_Params `protobuf:"bytes,1,opt,name=params,proto3,oneof"`
}

type AttestAgentRequest_ChallengeResponse struct {
	ChallengeResponse []byte `protobuf:"bytes,2,opt,name=challenge_response,json=challengeResponse,proto3,oneof"`
}

func (*AttestAgentRequest_Params_) isAttestAgentRequest_Step() {}

func (*AttestAgentRequest_ChallengeResponse) isAttestAgentRequest_Step() {}

func (m *AttestAgentRequest) GetStep() isAttestAgentRequest_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *AttestAgentRequest) GetParams() *AttestAgentRequest_Params {
	if x, ok := m.GetStep().(*AttestAgentRequest_Params_); ok {
		return x.Params
	}
	return nil
}

func (m *AttestAgentRequest) GetChallengeResponse() []byte {
	if x, ok := m.GetStep().(*AttestAgentRequest_ChallengeResponse); ok {
		return x.ChallengeResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AttestAgentRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AttestAgentRequest_Params_)(nil),
		(*AttestAgentRequest_ChallengeResponse)(nil),
	}
}

type AttestAgentRequest_Params struct {
	// Required. The attestation data.
	Data *types.AttestationData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Required. The X509-SVID parameters.
	Params               *X509SVIDParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AttestAgentRequest_Params) Reset()         { *m = AttestAgentRequest_Params{} }
func (m *AttestAgentRequest_Params) String() string { return proto.CompactTextString(m) }
func (*AttestAgentRequest_Params) ProtoMessage()    {}
func (*AttestAgentRequest_Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{0, 0}
}

func (m *AttestAgentRequest_Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestAgentRequest_Params.Unmarshal(m, b)
}
func (m *AttestAgentRequest_Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestAgentRequest_Params.Marshal(b, m, deterministic)
}
func (m *AttestAgentRequest_Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestAgentRequest_Params.Merge(m, src)
}
func (m *AttestAgentRequest_Params) XXX_Size() int {
	return xxx_messageInfo_AttestAgentRequest_Params.Size(m)
}
func (m *AttestAgentRequest_Params) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestAgentRequest_Params.DiscardUnknown(m)
}

var xxx_messageInfo_AttestAgentRequest_Params proto.InternalMessageInfo

func (m *AttestAgentRequest_Params) GetData() *types.AttestationData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AttestAgentRequest_Params) GetParams() *X509SVIDParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type AttestAgentResponse struct {
	// Types that are valid to be assigned to Step:
	//	*AttestAgentResponse_Result_
	//	*AttestAgentResponse_Challenge
	Step                 isAttestAgentResponse_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AttestAgentResponse) Reset()         { *m = AttestAgentResponse{} }
func (m *AttestAgentResponse) String() string { return proto.CompactTextString(m) }
func (*AttestAgentResponse) ProtoMessage()    {}
func (*AttestAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{1}
}

func (m *AttestAgentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestAgentResponse.Unmarshal(m, b)
}
func (m *AttestAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestAgentResponse.Marshal(b, m, deterministic)
}
func (m *AttestAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestAgentResponse.Merge(m, src)
}
func (m *AttestAgentResponse) XXX_Size() int {
	return xxx_messageInfo_AttestAgentResponse.Size(m)
}
func (m *AttestAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttestAgentResponse proto.InternalMessageInfo

type isAttestAgentResponse_Step interface {
	isAttestAgentResponse_Step()
}

type AttestAgentResponse_Result_ struct {
	Result *AttestAgentResponse_Result `protobuf:"bytes,1,opt,name=result,proto3,oneof"`
}

type AttestAgentResponse_Challenge struct {
	Challenge []byte `protobuf:"bytes,2,opt,name=challenge,proto3,oneof"`
}

func (*AttestAgentResponse_Result_) isAttestAgentResponse_Step() {}

func (*AttestAgentResponse_Challenge) isAttestAgentResponse_Step() {}

func (m *AttestAgentResponse) GetStep() isAttestAgentResponse_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *AttestAgentResponse) GetResult() *AttestAgentResponse_Result {
	if x, ok := m.GetStep().(*AttestAgentResponse_Result_); ok {
		return x.Result
	}
	return nil
}

func (m *AttestAgentResponse) GetChallenge() []byte {
	if x, ok := m.GetStep().(*AttestAgentResponse_Challenge); ok {
		return x.Challenge
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AttestAgentResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AttestAgentResponse_Result_)(nil),
		(*AttestAgentResponse_Challenge)(nil),
	}
}

type AttestAgentResponse_Result struct {
	Identity             *svid.X509SVID `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AttestAgentResponse_Result) Reset()         { *m = AttestAgentResponse_Result{} }
func (m *AttestAgentResponse_Result) String() string { return proto.CompactTextString(m) }
func (*AttestAgentResponse_Result) ProtoMessage()    {}
func (*AttestAgentResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{1, 0}
}

func (m *AttestAgentResponse_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestAgentResponse_Result.Unmarshal(m, b)
}
func (m *AttestAgentResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestAgentResponse_Result.Marshal(b, m, deterministic)
}
func (m *AttestAgentResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestAgentResponse_Result.Merge(m, src)
}
func (m *AttestAgentResponse_Result) XXX_Size() int {
	return xxx_messageInfo_AttestAgentResponse_Result.Size(m)
}
func (m *AttestAgentResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestAgentResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_AttestAgentResponse_Result proto.InternalMessageInfo

func (m *AttestAgentResponse_Result) GetIdentity() *svid.X509SVID {
	if m != nil {
		return m.Identity
	}
	return nil
}

type RenewAgentRequest struct {
	// Required. The data for the step in the renewal flow.
	//
	// Types that are valid to be assigned to Step:
	//	*RenewAgentRequest_Params
	//	*RenewAgentRequest_Ack_
	Step                 isRenewAgentRequest_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *RenewAgentRequest) Reset()         { *m = RenewAgentRequest{} }
func (m *RenewAgentRequest) String() string { return proto.CompactTextString(m) }
func (*RenewAgentRequest) ProtoMessage()    {}
func (*RenewAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{2}
}

func (m *RenewAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewAgentRequest.Unmarshal(m, b)
}
func (m *RenewAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewAgentRequest.Marshal(b, m, deterministic)
}
func (m *RenewAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewAgentRequest.Merge(m, src)
}
func (m *RenewAgentRequest) XXX_Size() int {
	return xxx_messageInfo_RenewAgentRequest.Size(m)
}
func (m *RenewAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenewAgentRequest proto.InternalMessageInfo

type isRenewAgentRequest_Step interface {
	isRenewAgentRequest_Step()
}

type RenewAgentRequest_Params struct {
	Params *X509SVIDParams `protobuf:"bytes,1,opt,name=params,proto3,oneof"`
}

type RenewAgentRequest_Ack_ struct {
	Ack *RenewAgentRequest_Ack `protobuf:"bytes,2,opt,name=ack,proto3,oneof"`
}

func (*RenewAgentRequest_Params) isRenewAgentRequest_Step() {}

func (*RenewAgentRequest_Ack_) isRenewAgentRequest_Step() {}

func (m *RenewAgentRequest) GetStep() isRenewAgentRequest_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *RenewAgentRequest) GetParams() *X509SVIDParams {
	if x, ok := m.GetStep().(*RenewAgentRequest_Params); ok {
		return x.Params
	}
	return nil
}

func (m *RenewAgentRequest) GetAck() *RenewAgentRequest_Ack {
	if x, ok := m.GetStep().(*RenewAgentRequest_Ack_); ok {
		return x.Ack
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RenewAgentRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RenewAgentRequest_Params)(nil),
		(*RenewAgentRequest_Ack_)(nil),
	}
}

type RenewAgentRequest_Ack struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewAgentRequest_Ack) Reset()         { *m = RenewAgentRequest_Ack{} }
func (m *RenewAgentRequest_Ack) String() string { return proto.CompactTextString(m) }
func (*RenewAgentRequest_Ack) ProtoMessage()    {}
func (*RenewAgentRequest_Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{2, 0}
}

func (m *RenewAgentRequest_Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewAgentRequest_Ack.Unmarshal(m, b)
}
func (m *RenewAgentRequest_Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewAgentRequest_Ack.Marshal(b, m, deterministic)
}
func (m *RenewAgentRequest_Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewAgentRequest_Ack.Merge(m, src)
}
func (m *RenewAgentRequest_Ack) XXX_Size() int {
	return xxx_messageInfo_RenewAgentRequest_Ack.Size(m)
}
func (m *RenewAgentRequest_Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewAgentRequest_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_RenewAgentRequest_Ack proto.InternalMessageInfo

type RenewAgentResponse struct {
	// The renewed X509-SVID
	Svid                 *svid.X509SVID `protobuf:"bytes,1,opt,name=svid,proto3" json:"svid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RenewAgentResponse) Reset()         { *m = RenewAgentResponse{} }
func (m *RenewAgentResponse) String() string { return proto.CompactTextString(m) }
func (*RenewAgentResponse) ProtoMessage()    {}
func (*RenewAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{3}
}

func (m *RenewAgentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewAgentResponse.Unmarshal(m, b)
}
func (m *RenewAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewAgentResponse.Marshal(b, m, deterministic)
}
func (m *RenewAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewAgentResponse.Merge(m, src)
}
func (m *RenewAgentResponse) XXX_Size() int {
	return xxx_messageInfo_RenewAgentResponse.Size(m)
}
func (m *RenewAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenewAgentResponse proto.InternalMessageInfo

func (m *RenewAgentResponse) GetSvid() *svid.X509SVID {
	if m != nil {
		return m.Svid
	}
	return nil
}

type NewX509SVIDRequest struct {
	// Required. The entry ID for the identity being requested.
	EntryId string `protobuf:"bytes,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	// Required. Parameters for the X509-SVID.
	Params               *X509SVIDParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NewX509SVIDRequest) Reset()         { *m = NewX509SVIDRequest{} }
func (m *NewX509SVIDRequest) String() string { return proto.CompactTextString(m) }
func (*NewX509SVIDRequest) ProtoMessage()    {}
func (*NewX509SVIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{4}
}

func (m *NewX509SVIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewX509SVIDRequest.Unmarshal(m, b)
}
func (m *NewX509SVIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewX509SVIDRequest.Marshal(b, m, deterministic)
}
func (m *NewX509SVIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewX509SVIDRequest.Merge(m, src)
}
func (m *NewX509SVIDRequest) XXX_Size() int {
	return xxx_messageInfo_NewX509SVIDRequest.Size(m)
}
func (m *NewX509SVIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewX509SVIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewX509SVIDRequest proto.InternalMessageInfo

func (m *NewX509SVIDRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *NewX509SVIDRequest) GetParams() *X509SVIDParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type NewX509SVIDResponse struct {
	// The newly issued X509-SVID.
	Svid                 *svid.X509SVID `protobuf:"bytes,1,opt,name=svid,proto3" json:"svid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NewX509SVIDResponse) Reset()         { *m = NewX509SVIDResponse{} }
func (m *NewX509SVIDResponse) String() string { return proto.CompactTextString(m) }
func (*NewX509SVIDResponse) ProtoMessage()    {}
func (*NewX509SVIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{5}
}

func (m *NewX509SVIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewX509SVIDResponse.Unmarshal(m, b)
}
func (m *NewX509SVIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewX509SVIDResponse.Marshal(b, m, deterministic)
}
func (m *NewX509SVIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewX509SVIDResponse.Merge(m, src)
}
func (m *NewX509SVIDResponse) XXX_Size() int {
	return xxx_messageInfo_NewX509SVIDResponse.Size(m)
}
func (m *NewX509SVIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewX509SVIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewX509SVIDResponse proto.InternalMessageInfo

func (m *NewX509SVIDResponse) GetSvid() *svid.X509SVID {
	if m != nil {
		return m.Svid
	}
	return nil
}

type NewJWTSVIDRequest struct {
	// Required. The entry ID of the identity being requested
	EntryId string `protobuf:"bytes,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	// Required. Parameters for the JWT-SVID
	Params               *JWTSVIDParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NewJWTSVIDRequest) Reset()         { *m = NewJWTSVIDRequest{} }
func (m *NewJWTSVIDRequest) String() string { return proto.CompactTextString(m) }
func (*NewJWTSVIDRequest) ProtoMessage()    {}
func (*NewJWTSVIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{6}
}

func (m *NewJWTSVIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewJWTSVIDRequest.Unmarshal(m, b)
}
func (m *NewJWTSVIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewJWTSVIDRequest.Marshal(b, m, deterministic)
}
func (m *NewJWTSVIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewJWTSVIDRequest.Merge(m, src)
}
func (m *NewJWTSVIDRequest) XXX_Size() int {
	return xxx_messageInfo_NewJWTSVIDRequest.Size(m)
}
func (m *NewJWTSVIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewJWTSVIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewJWTSVIDRequest proto.InternalMessageInfo

func (m *NewJWTSVIDRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *NewJWTSVIDRequest) GetParams() *JWTSVIDParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type NewJWTSVIDResponse struct {
	// The newly issued JWT-SVID
	Svid                 *svid.JWTSVID `protobuf:"bytes,1,opt,name=svid,proto3" json:"svid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NewJWTSVIDResponse) Reset()         { *m = NewJWTSVIDResponse{} }
func (m *NewJWTSVIDResponse) String() string { return proto.CompactTextString(m) }
func (*NewJWTSVIDResponse) ProtoMessage()    {}
func (*NewJWTSVIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{7}
}

func (m *NewJWTSVIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewJWTSVIDResponse.Unmarshal(m, b)
}
func (m *NewJWTSVIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewJWTSVIDResponse.Marshal(b, m, deterministic)
}
func (m *NewJWTSVIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewJWTSVIDResponse.Merge(m, src)
}
func (m *NewJWTSVIDResponse) XXX_Size() int {
	return xxx_messageInfo_NewJWTSVIDResponse.Size(m)
}
func (m *NewJWTSVIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewJWTSVIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewJWTSVIDResponse proto.InternalMessageInfo

func (m *NewJWTSVIDResponse) GetSvid() *svid.JWTSVID {
	if m != nil {
		return m.Svid
	}
	return nil
}

type NewDownstreamX509CARequest struct {
	// Required. The public key of the downstream X509 CA to use in the new CA
	// certificate.
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewDownstreamX509CARequest) Reset()         { *m = NewDownstreamX509CARequest{} }
func (m *NewDownstreamX509CARequest) String() string { return proto.CompactTextString(m) }
func (*NewDownstreamX509CARequest) ProtoMessage()    {}
func (*NewDownstreamX509CARequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{8}
}

func (m *NewDownstreamX509CARequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDownstreamX509CARequest.Unmarshal(m, b)
}
func (m *NewDownstreamX509CARequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDownstreamX509CARequest.Marshal(b, m, deterministic)
}
func (m *NewDownstreamX509CARequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDownstreamX509CARequest.Merge(m, src)
}
func (m *NewDownstreamX509CARequest) XXX_Size() int {
	return xxx_messageInfo_NewDownstreamX509CARequest.Size(m)
}
func (m *NewDownstreamX509CARequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDownstreamX509CARequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewDownstreamX509CARequest proto.InternalMessageInfo

func (m *NewDownstreamX509CARequest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type NewDownstreamX509CAResponse struct {
	// CA certificate and any intermediates part of the chain back to the root
	// (DER encoded). The CA certificate is the first.
	CaCertChain [][]byte `protobuf:"bytes,1,rep,name=ca_cert_chain,json=caCertChain,proto3" json:"ca_cert_chain,omitempty"`
	// Root CA certificates (DER encoded).
	RootCas              [][]byte `protobuf:"bytes,2,rep,name=root_cas,json=rootCas,proto3" json:"root_cas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewDownstreamX509CAResponse) Reset()         { *m = NewDownstreamX509CAResponse{} }
func (m *NewDownstreamX509CAResponse) String() string { return proto.CompactTextString(m) }
func (*NewDownstreamX509CAResponse) ProtoMessage()    {}
func (*NewDownstreamX509CAResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{9}
}

func (m *NewDownstreamX509CAResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDownstreamX509CAResponse.Unmarshal(m, b)
}
func (m *NewDownstreamX509CAResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDownstreamX509CAResponse.Marshal(b, m, deterministic)
}
func (m *NewDownstreamX509CAResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDownstreamX509CAResponse.Merge(m, src)
}
func (m *NewDownstreamX509CAResponse) XXX_Size() int {
	return xxx_messageInfo_NewDownstreamX509CAResponse.Size(m)
}
func (m *NewDownstreamX509CAResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDownstreamX509CAResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewDownstreamX509CAResponse proto.InternalMessageInfo

func (m *NewDownstreamX509CAResponse) GetCaCertChain() [][]byte {
	if m != nil {
		return m.CaCertChain
	}
	return nil
}

func (m *NewDownstreamX509CAResponse) GetRootCas() [][]byte {
	if m != nil {
		return m.RootCas
	}
	return nil
}

type GetAuthorizedEntriesRequest struct {
	// An output mask indicating which fields are set in the response.
	OutputMask           *types.EntryMask `protobuf:"bytes,1,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetAuthorizedEntriesRequest) Reset()         { *m = GetAuthorizedEntriesRequest{} }
func (m *GetAuthorizedEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuthorizedEntriesRequest) ProtoMessage()    {}
func (*GetAuthorizedEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{10}
}

func (m *GetAuthorizedEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorizedEntriesRequest.Unmarshal(m, b)
}
func (m *GetAuthorizedEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorizedEntriesRequest.Marshal(b, m, deterministic)
}
func (m *GetAuthorizedEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizedEntriesRequest.Merge(m, src)
}
func (m *GetAuthorizedEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuthorizedEntriesRequest.Size(m)
}
func (m *GetAuthorizedEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizedEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizedEntriesRequest proto.InternalMessageInfo

func (m *GetAuthorizedEntriesRequest) GetOutputMask() *types.EntryMask {
	if m != nil {
		return m.OutputMask
	}
	return nil
}

type GetAuthorizedEntriesResponse struct {
	// The authorized entries.
	Entries              []*types.Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAuthorizedEntriesResponse) Reset()         { *m = GetAuthorizedEntriesResponse{} }
func (m *GetAuthorizedEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*GetAuthorizedEntriesResponse) ProtoMessage()    {}
func (*GetAuthorizedEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{11}
}

func (m *GetAuthorizedEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorizedEntriesResponse.Unmarshal(m, b)
}
func (m *GetAuthorizedEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorizedEntriesResponse.Marshal(b, m, deterministic)
}
func (m *GetAuthorizedEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizedEntriesResponse.Merge(m, src)
}
func (m *GetAuthorizedEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_GetAuthorizedEntriesResponse.Size(m)
}
func (m *GetAuthorizedEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizedEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizedEntriesResponse proto.InternalMessageInfo

func (m *GetAuthorizedEntriesResponse) GetEntries() []*types.Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

// X509SVIDParams are the parameters the issuer needs to mint an X509-SVID
type X509SVIDParams struct {
	// Required. The public key of the X.509-SVID.
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *X509SVIDParams) Reset()         { *m = X509SVIDParams{} }
func (m *X509SVIDParams) String() string { return proto.CompactTextString(m) }
func (*X509SVIDParams) ProtoMessage()    {}
func (*X509SVIDParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{12}
}

func (m *X509SVIDParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_X509SVIDParams.Unmarshal(m, b)
}
func (m *X509SVIDParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_X509SVIDParams.Marshal(b, m, deterministic)
}
func (m *X509SVIDParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_X509SVIDParams.Merge(m, src)
}
func (m *X509SVIDParams) XXX_Size() int {
	return xxx_messageInfo_X509SVIDParams.Size(m)
}
func (m *X509SVIDParams) XXX_DiscardUnknown() {
	xxx_messageInfo_X509SVIDParams.DiscardUnknown(m)
}

var xxx_messageInfo_X509SVIDParams proto.InternalMessageInfo

func (m *X509SVIDParams) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

// JWTSVIDParams are the parameters the issuer needs to mint a JWT-SVID
type JWTSVIDParams struct {
	// Required. One or more JWT-SVID audiences.
	Audience             []string `protobuf:"bytes,1,rep,name=audience,proto3" json:"audience,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JWTSVIDParams) Reset()         { *m = JWTSVIDParams{} }
func (m *JWTSVIDParams) String() string { return proto.CompactTextString(m) }
func (*JWTSVIDParams) ProtoMessage()    {}
func (*JWTSVIDParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8d83c9b614651f, []int{13}
}

func (m *JWTSVIDParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWTSVIDParams.Unmarshal(m, b)
}
func (m *JWTSVIDParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWTSVIDParams.Marshal(b, m, deterministic)
}
func (m *JWTSVIDParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWTSVIDParams.Merge(m, src)
}
func (m *JWTSVIDParams) XXX_Size() int {
	return xxx_messageInfo_JWTSVIDParams.Size(m)
}
func (m *JWTSVIDParams) XXX_DiscardUnknown() {
	xxx_messageInfo_JWTSVIDParams.DiscardUnknown(m)
}

var xxx_messageInfo_JWTSVIDParams proto.InternalMessageInfo

func (m *JWTSVIDParams) GetAudience() []string {
	if m != nil {
		return m.Audience
	}
	return nil
}

func init() {
	proto.RegisterType((*AttestAgentRequest)(nil), "spire.api.issuer.v1.AttestAgentRequest")
	proto.RegisterType((*AttestAgentRequest_Params)(nil), "spire.api.issuer.v1.AttestAgentRequest.Params")
	proto.RegisterType((*AttestAgentResponse)(nil), "spire.api.issuer.v1.AttestAgentResponse")
	proto.RegisterType((*AttestAgentResponse_Result)(nil), "spire.api.issuer.v1.AttestAgentResponse.Result")
	proto.RegisterType((*RenewAgentRequest)(nil), "spire.api.issuer.v1.RenewAgentRequest")
	proto.RegisterType((*RenewAgentRequest_Ack)(nil), "spire.api.issuer.v1.RenewAgentRequest.Ack")
	proto.RegisterType((*RenewAgentResponse)(nil), "spire.api.issuer.v1.RenewAgentResponse")
	proto.RegisterType((*NewX509SVIDRequest)(nil), "spire.api.issuer.v1.NewX509SVIDRequest")
	proto.RegisterType((*NewX509SVIDResponse)(nil), "spire.api.issuer.v1.NewX509SVIDResponse")
	proto.RegisterType((*NewJWTSVIDRequest)(nil), "spire.api.issuer.v1.NewJWTSVIDRequest")
	proto.RegisterType((*NewJWTSVIDResponse)(nil), "spire.api.issuer.v1.NewJWTSVIDResponse")
	proto.RegisterType((*NewDownstreamX509CARequest)(nil), "spire.api.issuer.v1.NewDownstreamX509CARequest")
	proto.RegisterType((*NewDownstreamX509CAResponse)(nil), "spire.api.issuer.v1.NewDownstreamX509CAResponse")
	proto.RegisterType((*GetAuthorizedEntriesRequest)(nil), "spire.api.issuer.v1.GetAuthorizedEntriesRequest")
	proto.RegisterType((*GetAuthorizedEntriesResponse)(nil), "spire.api.issuer.v1.GetAuthorizedEntriesResponse")
	proto.RegisterType((*X509SVIDParams)(nil), "spire.api.issuer.v1.X509SVIDParams")
	proto.RegisterType((*JWTSVIDParams)(nil), "spire.api.issuer.v1.JWTSVIDParams")
}

func init() { proto.RegisterFile("issuer.proto", fileDescriptor_8e8d83c9b614651f) }

var fileDescriptor_8e8d83c9b614651f = []byte{
	// 817 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xed, 0x6e, 0xc3, 0x34,
	0x14, 0x5d, 0xf6, 0xd1, 0xad, 0xb7, 0x1d, 0xd2, 0x3c, 0x84, 0xb6, 0x6c, 0xa0, 0x29, 0x43, 0xac,
	0xe2, 0x23, 0xe9, 0x86, 0x06, 0x1a, 0xd3, 0x80, 0xae, 0x9d, 0x68, 0xf9, 0x98, 0x50, 0x40, 0x03,
	0x21, 0x50, 0xf1, 0xd2, 0xbb, 0xd5, 0x6b, 0x9b, 0x84, 0xd8, 0x59, 0x57, 0x78, 0x02, 0xfe, 0xf1,
	0x0a, 0xbc, 0x0e, 0x4f, 0x85, 0xe2, 0xb8, 0x69, 0xd3, 0xa4, 0xb4, 0xc0, 0xaf, 0x36, 0xf6, 0x39,
	0xf7, 0x9e, 0x73, 0x7d, 0xaf, 0x65, 0x28, 0x33, 0xce, 0x43, 0x0c, 0x4c, 0x3f, 0xf0, 0x84, 0x47,
	0x76, 0xb9, 0xcf, 0x02, 0x34, 0xa9, 0xcf, 0x4c, 0xb5, 0xfe, 0x7c, 0xaa, 0x1b, 0x72, 0xd1, 0x72,
	0xf1, 0x45, 0x58, 0x62, 0xe4, 0x23, 0xb7, 0xa8, 0x10, 0xc8, 0x05, 0x15, 0xcc, 0x73, 0x63, 0xa2,
	0x7e, 0x98, 0xc1, 0xa0, 0x2b, 0x82, 0x91, 0xda, 0x3d, 0xce, 0xec, 0xf2, 0x67, 0xd6, 0xb1, 0x9e,
	0x86, 0x22, 0xfa, 0x55, 0xa0, 0x37, 0xf3, 0x41, 0x2f, 0xe7, 0xd5, 0x8b, 0x09, 0xca, 0xf8, 0x63,
	0x15, 0x48, 0x4d, 0xa6, 0xaf, 0x3d, 0xa2, 0x2b, 0x6c, 0xfc, 0x25, 0x44, 0x2e, 0x48, 0x13, 0x0a,
	0x3e, 0x0d, 0xe8, 0x80, 0xef, 0x69, 0x47, 0x5a, 0xa5, 0x74, 0x66, 0x9a, 0x39, 0x4e, 0xcc, 0x2c,
	0xd1, 0xfc, 0x5a, 0xb2, 0x9a, 0x2b, 0xb6, 0xe2, 0x13, 0x0b, 0x88, 0xd3, 0xa5, 0xfd, 0x3e, 0xba,
	0x8f, 0xd8, 0x0e, 0x90, 0xfb, 0x9e, 0xcb, 0x71, 0x6f, 0xf5, 0x48, 0xab, 0x94, 0x9b, 0x2b, 0xf6,
	0x4e, 0xb2, 0x67, 0xab, 0x2d, 0x7d, 0x08, 0x85, 0x38, 0x08, 0xa9, 0xc2, 0x7a, 0x87, 0x0a, 0xaa,
	0x24, 0x1c, 0x2a, 0x09, 0xd2, 0x8b, 0x4a, 0x2d, 0x4b, 0xd6, 0xa0, 0x82, 0xda, 0x12, 0x49, 0x2e,
	0x13, 0xd9, 0xab, 0x92, 0x73, 0x9c, 0x2b, 0xfb, 0xfb, 0xf3, 0xea, 0xc5, 0x37, 0x77, 0xad, 0x46,
	0x9c, 0x66, 0xac, 0xf4, 0xba, 0x00, 0xeb, 0x5c, 0xa0, 0x6f, 0xfc, 0xa5, 0xc1, 0x6e, 0xca, 0x59,
	0x2c, 0x8c, 0xb4, 0xa0, 0x10, 0x20, 0x0f, 0xfb, 0x42, 0x09, 0xb2, 0x16, 0xd7, 0x24, 0x66, 0x9a,
	0xb6, 0xa4, 0x45, 0x45, 0x89, 0x03, 0x90, 0x37, 0xa0, 0x98, 0x18, 0x4f, 0x6a, 0x31, 0x59, 0xd2,
	0x3f, 0x85, 0x42, 0xcc, 0x21, 0x1f, 0xc0, 0x16, 0xeb, 0xa0, 0x2b, 0x98, 0x18, 0xa9, 0xb4, 0x7a,
	0xaa, 0x0e, 0xf2, 0x28, 0xc7, 0x86, 0xec, 0x04, 0x9b, 0x98, 0xf9, 0x53, 0x83, 0x1d, 0x1b, 0x5d,
	0x1c, 0xa6, 0x8e, 0xf7, 0x6a, 0xe6, 0x78, 0x97, 0xa9, 0xd3, 0xd4, 0x99, 0x7e, 0x0c, 0x6b, 0xd4,
	0xe9, 0xa9, 0x1a, 0xbf, 0x9d, 0xcb, 0xcd, 0xe4, 0x34, 0x6b, 0x4e, 0xaf, 0xb9, 0x62, 0x47, 0x44,
	0x7d, 0x03, 0xd6, 0x6a, 0x4e, 0x2f, 0xd1, 0xd8, 0x00, 0x32, 0x0d, 0x57, 0xe5, 0x36, 0x61, 0x3d,
	0x32, 0xb7, 0x84, 0x6b, 0x89, 0x33, 0xfa, 0x40, 0x6e, 0x71, 0x98, 0x2c, 0x2a, 0xa7, 0xfb, 0xb0,
	0x25, 0x27, 0xa7, 0xad, 0x22, 0x15, 0xed, 0x4d, 0xf9, 0xdd, 0xea, 0xfc, 0xaf, 0x66, 0x31, 0x6e,
	0x60, 0x37, 0x95, 0xed, 0x3f, 0x8a, 0x7e, 0x82, 0x9d, 0x5b, 0x1c, 0x7e, 0xfe, 0xdd, 0xb7, 0x4b,
	0x6a, 0xfe, 0x68, 0x46, 0xb3, 0x91, 0xab, 0x59, 0xc5, 0x9b, 0x91, 0x5c, 0x97, 0x05, 0x4a, 0x72,
	0x29, 0xc5, 0xef, 0xa5, 0x14, 0xef, 0x67, 0x15, 0x8f, 0x09, 0xb1, 0xe0, 0x4b, 0xd0, 0x6f, 0x71,
	0xd8, 0xf0, 0x86, 0x2e, 0x17, 0x01, 0xd2, 0x41, 0xe4, 0xa7, 0x5e, 0x1b, 0x2b, 0x7f, 0x1d, 0xc0,
	0x0f, 0xef, 0xfb, 0xcc, 0x69, 0xf7, 0x30, 0xee, 0xd7, 0xb2, 0x5d, 0x8c, 0x57, 0xbe, 0xc0, 0x91,
	0xf1, 0x23, 0x1c, 0xe4, 0x92, 0x95, 0x14, 0x03, 0xb6, 0x1d, 0xda, 0x76, 0x30, 0x10, 0x6d, 0xa7,
	0x4b, 0x99, 0xbb, 0xa7, 0x1d, 0xad, 0x55, 0xca, 0x76, 0xc9, 0xa1, 0x75, 0x0c, 0x44, 0x3d, 0x5a,
	0x8a, 0x6a, 0x13, 0x78, 0x9e, 0x68, 0x3b, 0x34, 0x2a, 0x41, 0xb4, 0xbd, 0x19, 0x7d, 0xd7, 0x29,
	0x37, 0xee, 0xe0, 0xe0, 0x33, 0x14, 0xb5, 0x50, 0x74, 0xbd, 0x80, 0xfd, 0x8a, 0x9d, 0x1b, 0x57,
	0x04, 0x0c, 0xf9, 0x58, 0xdb, 0x87, 0x50, 0xf2, 0x42, 0xe1, 0x87, 0xa2, 0x3d, 0xa0, 0xbc, 0xa7,
	0xfc, 0xbe, 0x96, 0xf2, 0x1b, 0x31, 0x46, 0x5f, 0x51, 0xde, 0xb3, 0x21, 0x86, 0x46, 0xff, 0x8d,
	0x2f, 0xe1, 0x30, 0x3f, 0xae, 0x92, 0xfd, 0x2e, 0xc8, 0xe3, 0x61, 0xc8, 0xa5, 0xe0, 0xd2, 0x19,
	0xc9, 0x06, 0xb5, 0xc7, 0x10, 0xc3, 0x82, 0x57, 0xd2, 0x2d, 0xb5, 0xa8, 0x68, 0xef, 0xc0, 0x76,
	0xea, 0x3c, 0x89, 0x0e, 0x5b, 0x34, 0xec, 0x30, 0x74, 0x1d, 0x94, 0x09, 0x8b, 0x76, 0xf2, 0x7d,
	0xf6, 0xfb, 0x06, 0x14, 0x5a, 0xb2, 0x0f, 0x48, 0x07, 0x4a, 0x53, 0x77, 0x11, 0x39, 0x59, 0xf2,
	0x06, 0xd7, 0x2b, 0xcb, 0x5e, 0x6b, 0x15, 0xad, 0xaa, 0x11, 0x0a, 0x30, 0x99, 0x5d, 0xf2, 0xd6,
	0x72, 0x77, 0x81, 0x7e, 0xb2, 0x10, 0x37, 0x95, 0xe2, 0x67, 0x28, 0x4d, 0x8d, 0xda, 0x1c, 0x23,
	0xd9, 0xd1, 0x9f, 0x63, 0x24, 0x6f, 0x6a, 0x7f, 0x02, 0x98, 0x4c, 0xc6, 0x1c, 0x13, 0x99, 0x31,
	0xd5, 0x4f, 0x16, 0xe2, 0x54, 0xf8, 0x17, 0x79, 0x57, 0xcc, 0xb6, 0x3d, 0xb1, 0xe6, 0xf1, 0xe7,
	0x4c, 0x97, 0x5e, 0x5d, 0x9e, 0xa0, 0x32, 0xff, 0x06, 0xaf, 0xe6, 0xb5, 0x2e, 0xc9, 0x8f, 0xf4,
	0x0f, 0xd3, 0xa3, 0x9f, 0xfe, 0x0b, 0x46, 0x9c, 0xfc, 0xfa, 0x93, 0x1f, 0xae, 0x1e, 0x99, 0xe8,
	0x86, 0xf7, 0xa6, 0xe3, 0x0d, 0x2c, 0xee, 0xb3, 0x87, 0x07, 0xb4, 0xe2, 0x47, 0x89, 0x7c, 0x7b,
	0x58, 0x53, 0x0f, 0x14, 0xea, 0x33, 0x2b, 0x0e, 0x6b, 0x3d, 0x9f, 0x5e, 0xc6, 0xff, 0xee, 0x0b,
	0x12, 0xf6, 0xfe, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x28, 0xb5, 0x2d, 0x54, 0x09, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IssuerClient is the client API for Issuer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IssuerClient interface {
	// Attests the agent via node attestation, using a bidirectional stream to
	// faciliate attestation methods that require challenge/response.
	AttestAgent(ctx context.Context, opts ...grpc.CallOption) (Issuer_AttestAgentClient, error)
	// Renews the agent and returns a new X509-SVID using a bidirectional
	// stream to facilitate two-phase commit of the renewal.
	RenewAgent(ctx context.Context, opts ...grpc.CallOption) (Issuer_RenewAgentClient, error)
	// Creates an X509-SVID. The caller must be authorized for the given entry.
	NewX509SVID(ctx context.Context, in *NewX509SVIDRequest, opts ...grpc.CallOption) (*NewX509SVIDResponse, error)
	// Creates an JWT-SVID. The caller must be authorized for the given entry.
	NewJWTSVID(ctx context.Context, in *NewJWTSVIDRequest, opts ...grpc.CallOption) (*NewJWTSVIDResponse, error)
	// Creates an X509 CA certificate appropriate for use by a downstream
	// entity to mint X509-SVIDs.
	NewDownstreamX509CA(ctx context.Context, in *NewDownstreamX509CARequest, opts ...grpc.CallOption) (*NewDownstreamX509CAResponse, error)
	// Gets the entries the caller is authorized for.
	GetAuthorizedEntries(ctx context.Context, in *GetAuthorizedEntriesRequest, opts ...grpc.CallOption) (*GetAuthorizedEntriesResponse, error)
}

type issuerClient struct {
	cc *grpc.ClientConn
}

func NewIssuerClient(cc *grpc.ClientConn) IssuerClient {
	return &issuerClient{cc}
}

func (c *issuerClient) AttestAgent(ctx context.Context, opts ...grpc.CallOption) (Issuer_AttestAgentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Issuer_serviceDesc.Streams[0], "/spire.api.issuer.v1.Issuer/AttestAgent", opts...)
	if err != nil {
		return nil, err
	}
	x := &issuerAttestAgentClient{stream}
	return x, nil
}

type Issuer_AttestAgentClient interface {
	Send(*AttestAgentRequest) error
	Recv() (*AttestAgentResponse, error)
	grpc.ClientStream
}

type issuerAttestAgentClient struct {
	grpc.ClientStream
}

func (x *issuerAttestAgentClient) Send(m *AttestAgentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *issuerAttestAgentClient) Recv() (*AttestAgentResponse, error) {
	m := new(AttestAgentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *issuerClient) RenewAgent(ctx context.Context, opts ...grpc.CallOption) (Issuer_RenewAgentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Issuer_serviceDesc.Streams[1], "/spire.api.issuer.v1.Issuer/RenewAgent", opts...)
	if err != nil {
		return nil, err
	}
	x := &issuerRenewAgentClient{stream}
	return x, nil
}

type Issuer_RenewAgentClient interface {
	Send(*RenewAgentRequest) error
	Recv() (*RenewAgentResponse, error)
	grpc.ClientStream
}

type issuerRenewAgentClient struct {
	grpc.ClientStream
}

func (x *issuerRenewAgentClient) Send(m *RenewAgentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *issuerRenewAgentClient) Recv() (*RenewAgentResponse, error) {
	m := new(RenewAgentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *issuerClient) NewX509SVID(ctx context.Context, in *NewX509SVIDRequest, opts ...grpc.CallOption) (*NewX509SVIDResponse, error) {
	out := new(NewX509SVIDResponse)
	err := c.cc.Invoke(ctx, "/spire.api.issuer.v1.Issuer/NewX509SVID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuerClient) NewJWTSVID(ctx context.Context, in *NewJWTSVIDRequest, opts ...grpc.CallOption) (*NewJWTSVIDResponse, error) {
	out := new(NewJWTSVIDResponse)
	err := c.cc.Invoke(ctx, "/spire.api.issuer.v1.Issuer/NewJWTSVID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuerClient) NewDownstreamX509CA(ctx context.Context, in *NewDownstreamX509CARequest, opts ...grpc.CallOption) (*NewDownstreamX509CAResponse, error) {
	out := new(NewDownstreamX509CAResponse)
	err := c.cc.Invoke(ctx, "/spire.api.issuer.v1.Issuer/NewDownstreamX509CA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *issuerClient) GetAuthorizedEntries(ctx context.Context, in *GetAuthorizedEntriesRequest, opts ...grpc.CallOption) (*GetAuthorizedEntriesResponse, error) {
	out := new(GetAuthorizedEntriesResponse)
	err := c.cc.Invoke(ctx, "/spire.api.issuer.v1.Issuer/GetAuthorizedEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IssuerServer is the server API for Issuer service.
type IssuerServer interface {
	// Attests the agent via node attestation, using a bidirectional stream to
	// faciliate attestation methods that require challenge/response.
	AttestAgent(Issuer_AttestAgentServer) error
	// Renews the agent and returns a new X509-SVID using a bidirectional
	// stream to facilitate two-phase commit of the renewal.
	RenewAgent(Issuer_RenewAgentServer) error
	// Creates an X509-SVID. The caller must be authorized for the given entry.
	NewX509SVID(context.Context, *NewX509SVIDRequest) (*NewX509SVIDResponse, error)
	// Creates an JWT-SVID. The caller must be authorized for the given entry.
	NewJWTSVID(context.Context, *NewJWTSVIDRequest) (*NewJWTSVIDResponse, error)
	// Creates an X509 CA certificate appropriate for use by a downstream
	// entity to mint X509-SVIDs.
	NewDownstreamX509CA(context.Context, *NewDownstreamX509CARequest) (*NewDownstreamX509CAResponse, error)
	// Gets the entries the caller is authorized for.
	GetAuthorizedEntries(context.Context, *GetAuthorizedEntriesRequest) (*GetAuthorizedEntriesResponse, error)
}

// UnimplementedIssuerServer can be embedded to have forward compatible implementations.
type UnimplementedIssuerServer struct {
}

func (*UnimplementedIssuerServer) AttestAgent(srv Issuer_AttestAgentServer) error {
	return status.Errorf(codes.Unimplemented, "method AttestAgent not implemented")
}
func (*UnimplementedIssuerServer) RenewAgent(srv Issuer_RenewAgentServer) error {
	return status.Errorf(codes.Unimplemented, "method RenewAgent not implemented")
}
func (*UnimplementedIssuerServer) NewX509SVID(ctx context.Context, req *NewX509SVIDRequest) (*NewX509SVIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewX509SVID not implemented")
}
func (*UnimplementedIssuerServer) NewJWTSVID(ctx context.Context, req *NewJWTSVIDRequest) (*NewJWTSVIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewJWTSVID not implemented")
}
func (*UnimplementedIssuerServer) NewDownstreamX509CA(ctx context.Context, req *NewDownstreamX509CARequest) (*NewDownstreamX509CAResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewDownstreamX509CA not implemented")
}
func (*UnimplementedIssuerServer) GetAuthorizedEntries(ctx context.Context, req *GetAuthorizedEntriesRequest) (*GetAuthorizedEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthorizedEntries not implemented")
}

func RegisterIssuerServer(s *grpc.Server, srv IssuerServer) {
	s.RegisterService(&_Issuer_serviceDesc, srv)
}

func _Issuer_AttestAgent_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IssuerServer).AttestAgent(&issuerAttestAgentServer{stream})
}

type Issuer_AttestAgentServer interface {
	Send(*AttestAgentResponse) error
	Recv() (*AttestAgentRequest, error)
	grpc.ServerStream
}

type issuerAttestAgentServer struct {
	grpc.ServerStream
}

func (x *issuerAttestAgentServer) Send(m *AttestAgentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *issuerAttestAgentServer) Recv() (*AttestAgentRequest, error) {
	m := new(AttestAgentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Issuer_RenewAgent_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IssuerServer).RenewAgent(&issuerRenewAgentServer{stream})
}

type Issuer_RenewAgentServer interface {
	Send(*RenewAgentResponse) error
	Recv() (*RenewAgentRequest, error)
	grpc.ServerStream
}

type issuerRenewAgentServer struct {
	grpc.ServerStream
}

func (x *issuerRenewAgentServer) Send(m *RenewAgentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *issuerRenewAgentServer) Recv() (*RenewAgentRequest, error) {
	m := new(RenewAgentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Issuer_NewX509SVID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewX509SVIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuerServer).NewX509SVID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.issuer.v1.Issuer/NewX509SVID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuerServer).NewX509SVID(ctx, req.(*NewX509SVIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issuer_NewJWTSVID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewJWTSVIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuerServer).NewJWTSVID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.issuer.v1.Issuer/NewJWTSVID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuerServer).NewJWTSVID(ctx, req.(*NewJWTSVIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issuer_NewDownstreamX509CA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewDownstreamX509CARequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuerServer).NewDownstreamX509CA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.issuer.v1.Issuer/NewDownstreamX509CA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuerServer).NewDownstreamX509CA(ctx, req.(*NewDownstreamX509CARequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Issuer_GetAuthorizedEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthorizedEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IssuerServer).GetAuthorizedEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.issuer.v1.Issuer/GetAuthorizedEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IssuerServer).GetAuthorizedEntries(ctx, req.(*GetAuthorizedEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Issuer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spire.api.issuer.v1.Issuer",
	HandlerType: (*IssuerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewX509SVID",
			Handler:    _Issuer_NewX509SVID_Handler,
		},
		{
			MethodName: "NewJWTSVID",
			Handler:    _Issuer_NewJWTSVID_Handler,
		},
		{
			MethodName: "NewDownstreamX509CA",
			Handler:    _Issuer_NewDownstreamX509CA_Handler,
		},
		{
			MethodName: "GetAuthorizedEntries",
			Handler:    _Issuer_GetAuthorizedEntries_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AttestAgent",
			Handler:       _Issuer_AttestAgent_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "RenewAgent",
			Handler:       _Issuer_RenewAgent_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "issuer.proto",
}
